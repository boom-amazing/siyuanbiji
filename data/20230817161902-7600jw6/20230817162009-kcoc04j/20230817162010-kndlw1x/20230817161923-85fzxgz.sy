{"ID":"20230817161923-85fzxgz","Spec":"1","Type":"NodeDocument","Properties":{"id":"20230817161923-85fzxgz","title":"JDBC","updated":"20230817161923"},"Children":[{"ID":"20230817161924-um29s55","Type":"NodeHeading","HeadingLevel":3,"Properties":{"id":"20230817161924-um29s55","updated":"20230817161924"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"### ","Properties":{"id":""}},{"Type":"NodeText","Data":"JDBC"}]},{"ID":"20230817161925-xobggd8","Type":"NodeHeading","HeadingLevel":4,"Properties":{"id":"20230817161925-xobggd8","updated":"20230817161925"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"#### ","Properties":{"id":""}},{"Type":"NodeText","Data":"一、数据库与java连接"}]},{"ID":"20230817161926-gc7ptaq","Type":"NodeList","ListData":{"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20230817161926-gc7ptaq","updated":"20230817161926"},"Children":[{"ID":"20230817161927-zzidkyq","Type":"NodeListItem","Data":"-","ListData":{"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20230817161927-zzidkyq","updated":"20230817161927"},"Children":[{"ID":"20230817161928-8oivpj6","Type":"NodeHeading","HeadingLevel":5,"Properties":{"id":"20230817161928-8oivpj6","updated":"20230817161928"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"##### ","Properties":{"id":""}},{"Type":"NodeText","Data":"利用prepaedstatement进行连接"}]},{"ID":"20230817161929-oibq52p","Type":"NodeList","ListData":{"Typ":1,"Start":1,"Delimiter":46,"Padding":3,"Marker":"MQ==","Num":1},"Properties":{"id":"20230817161929-oibq52p","updated":"20230817161929"},"Children":[{"ID":"20230817161930-8awc9qo","Type":"NodeListItem","Data":"1","ListData":{"Typ":1,"Start":1,"Delimiter":46,"Padding":3,"Marker":"MQ==","Num":1},"Properties":{"id":"20230817161930-8awc9qo","updated":"20230817161930"},"Children":[{"ID":"20230817161931-qwdzo38","Type":"NodeParagraph","Properties":{"id":"20230817161931-qwdzo38","updated":"20230817161931"},"Children":[{"Type":"NodeText","Data":"优势：它可以有效防止sql注入的问题 同时他也可以预处理让我们的代码更可用"}]}]},{"ID":"20230817161932-lp403r1","Type":"NodeListItem","Data":"2","ListData":{"Typ":1,"Tight":true,"Start":2,"Delimiter":46,"Padding":4,"Marker":"Mg==","Num":2},"Properties":{"id":"20230817161932-lp403r1","updated":"20230817161932"},"Children":[{"ID":"20230817161933-jh1ripq","Type":"NodeParagraph","Properties":{"id":"20230817161933-jh1ripq","updated":"20230817161933"},"Children":[{"Type":"NodeText","Data":"代码："}]}]}]},{"ID":"20230817161934-e2ni4fk","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockFenceOffset":3,"CodeBlockOpenFence":"YGBg","CodeBlockInfo":"amF2YQ==","CodeBlockCloseFence":"YGBg","Properties":{"id":"20230817161934-e2ni4fk","updated":"20230817161934"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"amF2YQ==","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"public static void main(String[] args) throws IOException, SQLException, ClassNotFoundException {\n        Properties properties = new Properties();\n        properties.load(new FileInputStream(\"src/com/pyy/jdbccon/mysql.propertites\"));\n        String user = properties.getProperty(\"user\");\n        String password = properties.getProperty(\"password\");\n        String url = properties.getProperty(\"url\");\n        String driver = properties.getProperty(\"driver\");\n        Class.forName(driver);\n        Connection connection = DriverManager.getConnection(url, user, password);\n        String sql=\"select * from news where id=? and content=?\";\n        PreparedStatement preparedStatement = connection.prepareStatement(sql);\n        preparedStatement.setInt(1,3);\n        preparedStatement.setString(2,\"jack\");//这里可以防止注入的问题\n        ResultSet resultSet = preparedStatement.executeQuery();\n        while (resultSet.next()){\n            int anInt = resultSet.getInt(1);\n            String string = resultSet.getString(2);\n            System.out.println(anInt+\"\\t\"+string);\n        }\n        resultSet.close();\n        preparedStatement.close();\n        connection.close();\n\n    }\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]}]},{"ID":"20230817161935-iwyisyt","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20230817161935-iwyisyt","updated":"20230817161935"},"Children":[{"ID":"20230817161936-hj9kehg","Type":"NodeParagraph","Properties":{"id":"20230817161936-hj9kehg","updated":"20230817161936"},"Children":[{"Type":"NodeText","Data":"通过封装utils来简化我们的连接与关闭流的操作"}]},{"ID":"20230817161937-6srek5q","Type":"NodeParagraph","Properties":{"id":"20230817161937-6srek5q","updated":"20230817161937"},"Children":[{"Type":"NodeText","Data":"代码："}]}]}]},{"ID":"20230817161938-bqtalz7","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockInfo":"amF2YQ==","CodeBlockCloseFence":"YGBg","Properties":{"id":"20230817161938-bqtalz7","updated":"20230817161938"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"amF2YQ==","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"public class Utils_ {\n    private  static  String user;\n    private  static  String password;\n    private  static  String url;\n    private  static  String driver;\n    static {\n        Properties properties = new Properties();\n        try {\n            properties.load(new FileInputStream(\"src/com/pyy/jdbccon/mysql.propertites\"));\n        } catch (IOException e){//将编译异常转成运行异常抛出 调用者既可以捕获该异常 也可以直接默认处理 比较方便\n             throw  new RuntimeException(e);\n        }\n        user = properties.getProperty(\"user\");\n        password= properties.getProperty(\"password\");\n        url = properties.getProperty(\"url\");\n        driver=properties.getProperty(\"driver\");\n\n    }\n    public  static Connection getConnection(){\n        try {\n            return DriverManager.getConnection(url,user,password);\n        } catch (SQLException e) {\n            throw  new RuntimeException(e);\n        }\n    }\n    public static void close(ResultSet resultSet,Statement statement,Connection connection){\n        try {\n            if(resultSet!=null){\n                resultSet.close();\n            }\n            if(statement!=null){\n                statement.close();\n            }\n            if(connection!=null){\n                connection.close();\n            }\n        } catch (SQLException e) {\n           throw  new RuntimeException(e);\n        }\n\n    }\n}\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20230817161939-n08stm6","Type":"NodeHeading","HeadingLevel":4,"Properties":{"id":"20230817161939-n08stm6","updated":"20230817161939"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"#### ","Properties":{"id":""}},{"Type":"NodeText","Data":"二、用utils工具类执行dml语句"}]},{"ID":"20230817161940-t138evo","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockInfo":"amF2YQ==","CodeBlockCloseFence":"YGBg","Properties":{"id":"20230817161940-t138evo","updated":"20230817161940"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"amF2YQ==","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":" @Test\n    public  void testDML(){\n        Connection connection=null;\n        String sql=\"update admin set admin_password=? where admin_name=?\";\n        PreparedStatement preparedStatement=null;\n        try {\n            connection=Utils_.getConnection();\n            preparedStatement= connection.prepareStatement(sql);\n            preparedStatement.setString(1,\"567\");\n            preparedStatement.setString(2,\"pyy\");\n            preparedStatement.executeUpdate();\n        } catch (SQLException e) {\n            e.printStackTrace();\n        } finally {\n            Utils_.close(null,preparedStatement,connection);\n        }\n\n\n    }\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20230817161941-a67rsha","Type":"NodeHeading","HeadingLevel":4,"Properties":{"id":"20230817161941-a67rsha","updated":"20230817161941"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"#### ","Properties":{"id":""}},{"Type":"NodeText","Data":"三、事务"}]},{"ID":"20230817161942-9hfb0w6","Type":"NodeParagraph","Properties":{"id":"20230817161942-9hfb0w6","updated":"20230817161942"},"Children":[{"Type":"NodeText","Data":"概念：事务主要是保证数据的一致性，著名的是银行问题"}]},{"ID":"20230817161943-j1dsaif","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockInfo":"amF2YQ==","CodeBlockCloseFence":"YGBg","Properties":{"id":"20230817161943-j1dsaif","updated":"20230817161943"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"amF2YQ==","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":" public void noTransaction(){\n        Connection connection=null;\n        String sql=\"UPDATE ‘account’ SET money=money-100 WHERE ‘name’='jack'\";\n        String sql1=\"UPDATE ‘account’ SET money=money+100 WHERE ‘name’='张三'\";\n        PreparedStatement preparedStatement=null;\n        try {\n            connection= Utils_.getConnection();//默认为自动提交\n            preparedStatement= connection.prepareStatement(sql);\n            preparedStatement.executeUpdate(sql);//当转帐时 如果发生异常导致第一个\n            更新记录成功 第二个失败的话 就会造成重大的经济损失\n            int i=1/0;\n            preparedStatement.executeUpdate(sql1);\n        } catch (SQLException e) {\n            e.printStackTrace();\n        } finally {\n            Utils_.close(null,preparedStatement,connection);\n        }\n    }\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20230817161944-swknhbt","Type":"NodeParagraph","Properties":{"id":"20230817161944-swknhbt","updated":"20230817161944"},"Children":[{"Type":"NodeText","Data":"所以我们这个时候就要采用事务来保持数据的一致性"}]},{"ID":"20230817161945-hjv46eq","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockInfo":"amF2YQ==","CodeBlockCloseFence":"YGBg","Properties":{"id":"20230817161945-hjv46eq","updated":"20230817161945"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"amF2YQ==","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":" public void noTransaction(){\n        Connection connection=null;\n        String sql=\"UPDATE ‘account’ SET money=money-100 WHERE ‘name’='jack'\";\n        String sql1=\"UPDATE ‘account’ SET money=money+100 WHERE ‘name’='张三'\";\n        PreparedStatement preparedStatement=null;\n        Savepoint a=null;\n        try {\n            connection= Utils_.getConnection();\n            connection.setAutoCommit(false);//设置一个手动提交\n             a= connection.setSavepoint(\"a\");//设置时间点\n            preparedStatement= connection.prepareStatement(sql);\n            preparedStatement.executeUpdate(sql);\n//            int i=1/0;\n            preparedStatement.executeUpdate(sql1);\n            connection.commit();//如果没有发生异常 就手动提交\n        } catch (SQLException e) {\n            System.out.println(\"程序回滚\");//如果程序发生异常 会进行一个回滚\n            来保证数据的一致性\n            try {\n                connection.rollback(a);\n            } catch (SQLException throwables) {\n                throwables.printStackTrace();\n            }\n            e.printStackTrace();\n        } finally {\n            Utils_.close(null,preparedStatement,connection);\n        }\n    }\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20230817161946-llyrxtt","Type":"NodeHeading","HeadingLevel":4,"Properties":{"id":"20230817161946-llyrxtt","updated":"20230817161946"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"#### ","Properties":{"id":""}},{"Type":"NodeText","Data":"四、批处理"}]},{"ID":"20230817161947-2l3xunt","Type":"NodeList","ListData":{"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20230817161947-2l3xunt","updated":"20230817161947"},"Children":[{"ID":"20230817161948-38mbq2f","Type":"NodeListItem","Data":"-","ListData":{"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20230817161948-38mbq2f","updated":"20230817161948"},"Children":[{"ID":"20230817161949-7i5y8ou","Type":"NodeParagraph","Properties":{"id":"20230817161949-7i5y8ou","updated":"20230817161949"},"Children":[{"Type":"NodeText","Data":"概念：当我们需要批量处理很多sql语句时可以用批处理"}]}]},{"ID":"20230817161950-dkinlj3","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20230817161950-dkinlj3","updated":"20230817161950"},"Children":[{"ID":"20230817161951-0tz6y2g","Type":"NodeParagraph","Properties":{"id":"20230817161951-0tz6y2g","updated":"20230817161951"},"Children":[{"Type":"NodeText","Data":"JDBC连接 mysql 时，如果要使用批处理功能，需要在 url 中加参数 ?rewriteBatchedStatements=true"}]}]},{"ID":"20230817161952-4vv6a4z","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20230817161952-4vv6a4z","updated":"20230817161952"},"Children":[{"ID":"20230817161953-ax5qe6x","Type":"NodeParagraph","Properties":{"id":"20230817161953-ax5qe6x","updated":"20230817161953"},"Children":[{"Type":"NodeText","Data":"测试代码："}]}]},{"ID":"20230817161954-hndcdfa","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20230817161954-hndcdfa","updated":"20230817161954"},"Children":[{"ID":"20230817161955-f4nxdgr","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockInfo":"amF2YQ==","CodeBlockCloseFence":"YGBg","Properties":{"id":"20230817161955-f4nxdgr","updated":"20230817161955"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"amF2YQ==","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"@Test\npublic void batchTest() throws SQLException {\n    Connection connection = Utils_.getConnection();\n    String sql = \"insert into admin values(?,?)\";\n    long start = System.currentTimeMillis();\n   PreparedStatement preparedStatement = connection.prepareStatement(sql);\n    for (int i = 0; i \u003c 5000; i++) {\n        preparedStatement.setString(1, \"i\"+i);\n        preparedStatement.setString(2, \"pyy\");\n        preparedStatement.addBatch();\n        if ((i + 1) % 1000 == 0) {\n            preparedStatement.executeBatch();//批量执行\n            preparedStatement.clearBatch();//每执行完一次清空batch\n        }\n    }\n    long last = System.currentTimeMillis();\n    System.out.println(last - start);\n    Utils_.close(null, preparedStatement, connection);\n}\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]}]}]},{"ID":"20230817161956-cdy8eo1","Type":"NodeHeading","HeadingLevel":4,"Properties":{"id":"20230817161956-cdy8eo1","updated":"20230817161956"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"#### ","Properties":{"id":""}},{"Type":"NodeText","Data":"五 、c3p0连接池"}]},{"ID":"20230817161957-czuoas3","Type":"NodeParagraph","Properties":{"id":"20230817161957-czuoas3","updated":"20230817161957"},"Children":[{"Type":"NodeText","Data":"xml文件必须放在src的路径下 同时文件名也不允许出现错误"}]},{"ID":"20230817161958-offarfc","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockInfo":"eG1s","CodeBlockCloseFence":"YGBg","Properties":{"id":"20230817161958-offarfc","updated":"20230817161958"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"eG1s","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"\u003c?xml version=\"1.0\" encoding=\"UTF-8\"?\u003e\n\u003cc3p0-config\u003e\n    \u003cnamed-config name=\"mySource\"\u003e\n        \u003cproperty name=\"driverClass\"\u003ecom.mysql.jdbc.Driver\u003c/property\u003e\n        \u003cproperty name=\"jdbcUrl\"\u003ejdbc:mysql://localhost:3306/pyy_db03\u003c/property\u003e\n        \u003cproperty name=\"user\"\u003eroot\u003c/property\u003e\n        \u003cproperty name=\"password\"\u003epyy\u003c/property\u003e\n\n        \u003cproperty name=\"initialPoolSize\"\u003e10\u003c/property\u003e\n        \u003cproperty name=\"maxIdleTime\"\u003e30\u003c/property\u003e\n        \u003cproperty name=\"maxPoolSize\"\u003e100\u003c/property\u003e\n        \u003cproperty name=\"minPoolSize\"\u003e10\u003c/property\u003e\n    \u003c/named-config\u003e\n\u003c/c3p0-config\u003e\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20230817161959-ght92t6","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockInfo":"amF2YQ==","CodeBlockCloseFence":"YGBg","Properties":{"id":"20230817161959-ght92t6","updated":"20230817161959"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"amF2YQ==","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"@Test\n    public  void test_c3p0_02() throws SQLException {//测试一下使用连接池的快速连接\n        ComboPooledDataSource comboPooledDataSource = new ComboPooledDataSource(\"mySource\");\n        long l = System.currentTimeMillis();\n        for (int i = 0; i \u003c 5000; i++) {\n            Connection connection = comboPooledDataSource.getConnection();\n            connection.close();\n        }\n        long l1 = System.currentTimeMillis();\n        System.out.println(l1-l);\n\n    }\n    @Test\n    public  void test_c3p0_02_testDml() throws SQLException {//测试一下查询语句\n        ComboPooledDataSource mySource = new ComboPooledDataSource(\"mySource\");\n        Connection connection = mySource.getConnection();\n        String sql=\"SELECT * FROM news where id=? \u0026\u0026content=?\";\n        PreparedStatement preparedStatement = connection.prepareStatement(sql);\n       preparedStatement.setInt(1,3);\n       preparedStatement.setString(2,\"jack\");\n        ResultSet resultSet = preparedStatement.executeQuery();\n        while (resultSet.next()){\n            int id = resultSet.getInt(\"id\");\n            String string = resultSet.getString(\"content\");\n            System.out.println(id+\"\\t\"+string);\n        }\n        resultSet.close();\n        preparedStatement.close();\n        connection.close();\n    }\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20230817161960-l34olhv","Type":"NodeHeading","HeadingLevel":4,"Properties":{"id":"20230817161960-l34olhv","updated":"20230817161960"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"#### ","Properties":{"id":""}},{"Type":"NodeText","Data":"六、Druid连接池"}]},{"ID":"20230817161961-733fqrs","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockInfo":"amF2YQ==","CodeBlockCloseFence":"YGBg","Properties":{"id":"20230817161961-733fqrs","updated":"20230817161961"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"amF2YQ==","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":" @Test\n    public void testDruid() throws Exception {//在大规模下 druid比c3p0更快一点\n        Properties properties = new Properties();\n        properties.load(new FileInputStream(\"src\\\\druid.properties\"));\n        DataSource dataSource = DruidDataSourceFactory.createDataSource(properties);\n        long l = System.currentTimeMillis();\n        for (int i = 0; i \u003c 500000; i++) {\n            Connection connection = dataSource.getConnection();\n            connection.close();\n        }\n        long l1 = System.currentTimeMillis();\n        System.out.println(l1-l);\n    }\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20230817161962-y0z941l","Type":"NodeParagraph","Properties":{"id":"20230817161962-y0z941l","updated":"20230817161962"},"Children":[{"Type":"NodeText","Data":"utils整合"}]},{"ID":"20230817161963-5ljcqxa","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockInfo":"amF2YQ==","CodeBlockCloseFence":"YGBg","Properties":{"id":"20230817161963-5ljcqxa","updated":"20230817161963"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"amF2YQ==","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"public class JdbcUtilsByDruid {\n    private  static DataSource ds;\n    static {\n        Properties properties = new Properties();\n        try {\n            properties.load(new FileInputStream(\"src\\\\druid.properties\"));\n            ds= DruidDataSourceFactory.createDataSource(properties);//得到数据源\n        } catch (Exception e) {\n            e.printStackTrace();\n        }\n    }\n    public static Connection getConnection() throws SQLException {\n        return ds.getConnection();\n    }\n    public static  void close(ResultSet resultSet, Statement statement,Connection connection) throws SQLException {\n        if(resultSet!=null){\n            resultSet.close();\n        }\n        if(statement!=null){\n            statement.close();\n        }\n        if(connection!=null){\n            connection.close();//这个地方只是把引用放进了连接池 而连接池与数据库的连接并没有断掉\n        }\n        return;\n    }\n    \n}\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20230817161964-hd43yeo","Type":"NodeHeading","HeadingLevel":4,"Properties":{"id":"20230817161964-hd43yeo","updated":"20230817161964"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"#### ","Properties":{"id":""}},{"Type":"NodeText","Data":"Apache utils"}]},{"ID":"20230817161965-6k80b1u","Type":"NodeParagraph","Properties":{"id":"20230817161965-6k80b1u","updated":"20230817161965"},"Children":[{"Type":"NodeText","Data":"是为了解决resultset可以复用 同时也能让数据库的遍历命名更简单的一套工具类 它的原理就是将数据库封装成一个对象 然后用集合保留下来"}]},{"ID":"20230817161966-ezntm1n","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockInfo":"amF2YQ==","CodeBlockCloseFence":"YGBg","Properties":{"id":"20230817161966-ezntm1n","updated":"20230817161966"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"amF2YQ==","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"public class Apache_dbutils_use {\n    @Test\n    public  void testDbutils() throws SQLException {//结果集为集合\n        Connection connection = JdbcUtilsByDruid.getConnection();\n        QueryRunner queryRunner = new QueryRunner();\n        String sql=\"select * from news where id\u003e? \";\n        List\u003cNews\u003e newsList = queryRunner.query(connection, sql,\n                new BeanListHandler\u003c\u003e(News.class),2);\n        System.out.println(newsList);\n        JdbcUtilsByDruid.close(null,null,connection);\n    }\n    @Test\n    public  void testQuerySingle() throws SQLException {//结果集为单行\n        Connection connection = JdbcUtilsByDruid.getConnection();\n        QueryRunner queryRunner = new QueryRunner();\n        String sql=\"select * from news where id=? \";\n        News query = queryRunner.query(connection, sql, new BeanHandler\u003c\u003e(News.class), 4);\n        System.out.println(query);\n        JdbcUtilsByDruid.close(null,null,connection);\n\n    }\n    @Test\n    public  void testQuery() throws SQLException {\n        Connection connection = JdbcUtilsByDruid.getConnection();\n        QueryRunner queryRunner = new QueryRunner();\n        String sql=\"select content from news where id=? \";\n        String query = queryRunner.query(connection, sql, new ScalarHandler\u003cString\u003e(), 5);\n        System.out.println(query);\n        JdbcUtilsByDruid.close(null,null,connection);\n    }\n    @Test\n    public  void testDml() throws SQLException {\n        Connection connection = JdbcUtilsByDruid.getConnection();\n        QueryRunner queryRunner = new QueryRunner();\n        String sql=\" update news set content=? where id=?\";\n        int affectedrows = queryRunner.update(connection, sql, \"pyyyyds\", 3);\n        System.out.println(affectedrows);\n        JdbcUtilsByDruid.close(null,null,connection);\n    }\n}\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20230817161967-ohvpzdu","Type":"NodeHeading","HeadingLevel":4,"Properties":{"id":"20230817161967-ohvpzdu","updated":"20230817161967"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"#### ","Properties":{"id":""}},{"Type":"NodeText","Data":"Basic Dao"}]},{"ID":"20230817161968-gr9udag","Type":"NodeParagraph","Properties":{"id":"20230817161968-gr9udag","updated":"20230817161968"},"Children":[{"Type":"NodeText","Data":"在实际开发中 我们可能会有很多数据库的操作 这个时候我们基于Apache utils工具类 进行分层 包括 dao层 service层 pojo层 dao层又有很多相同的操作 所以我们一般会把它封装成basicdao 其它层来继承这个basicdao"}]},{"ID":"20230817161969-4jj28ub","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockInfo":"amF2YQ==","CodeBlockCloseFence":"YGBg","Properties":{"id":"20230817161969-4jj28ub","updated":"20230817161969"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"amF2YQ==","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"public class BasicDao\u003cT\u003e {\n    private QueryRunner queryRunner=new QueryRunner();\n\n    public int dml(String sql,Object... parameters) throws SQLException {\n        Connection connection=null;\n        try {\n            connection= JdbcUtilsByDruid.getConnection();\n            int update=queryRunner.update(connection,sql,parameters);\n            return  update;\n        } catch (SQLException e) {\n            throw  new RuntimeException(e);\n        }finally {\n            JdbcUtilsByDruid.close(null,null,connection);\n        }\n    }\n    public List\u003cT\u003e queryMutiply(String sql,Class\u003cT\u003eclazz,Object...parameters) throws SQLException {\n        Connection connection=null;\n        try {\n            connection= JdbcUtilsByDruid.getConnection();\n            return  queryRunner.query(connection,sql,new BeanListHandler\u003cT\u003e(clazz),parameters);\n        } catch (SQLException e) {\n            throw  new RuntimeException(e);\n        }finally {\n            JdbcUtilsByDruid.close(null,null,connection);\n        }\n    }\n    public T querySingle(String sql,Class\u003cT\u003eclazz,Object...parameters) throws SQLException {\n        Connection connection=null;\n        try {\n            connection= JdbcUtilsByDruid.getConnection();\n            return  queryRunner.query(connection,sql,new BeanHandler\u003cT\u003e(clazz),parameters);\n        } catch (SQLException e) {\n            throw  new RuntimeException(e);\n        }finally {\n            JdbcUtilsByDruid.close(null,null,connection);\n        }\n    }\n    public Object queryScalar(String sql,Class\u003cT\u003eclazz,Object...parameters) throws SQLException {\n        Connection connection=null;\n        try {\n            connection= JdbcUtilsByDruid.getConnection();\n            return  queryRunner.query(connection,sql,new ScalarHandler(),parameters);\n        } catch (SQLException e) {\n            throw  new RuntimeException(e);\n        }finally {\n            JdbcUtilsByDruid.close(null,null,connection);\n        }\n    }\n}\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]}]}