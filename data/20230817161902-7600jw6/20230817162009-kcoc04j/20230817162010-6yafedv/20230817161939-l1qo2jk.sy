{"ID":"20230817161939-l1qo2jk","Spec":"1","Type":"NodeDocument","Properties":{"id":"20230817161939-l1qo2jk","title":"Redis架构","updated":"20230817161939"},"Children":[{"ID":"20230817161940-uft4yn6","Type":"NodeHeading","HeadingLevel":1,"Properties":{"id":"20230817161940-uft4yn6","updated":"20230817161940"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"# ","Properties":{"id":""}},{"Type":"NodeText","Data":"Redis架构演进"}]},{"ID":"20230817161941-7mtl2vz","Type":"NodeParagraph","Properties":{"id":"20230817161941-7mtl2vz","updated":"20230817161941"},"Children":[{"Type":"NodeText","Data":"现在我们使用的Redis是单机的，单机的Redis存在单点故障的问题，"},{"Type":"NodeSoftBreak","Data":"\n","Properties":{"id":""}},{"Type":"NodeText","Data":"所以Redis提供了主从复制的方案"}]},{"ID":"20230817161942-w7hsu4g","Type":"NodeHeading","HeadingLevel":2,"Properties":{"id":"20230817161942-w7hsu4g","updated":"20230817161942"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"## ","Properties":{"id":""}},{"Type":"NodeText","Data":"主从复制"}]},{"ID":"20230817161943-eum7az7","Type":"NodeParagraph","Properties":{"id":"20230817161943-eum7az7","updated":"20230817161943"},"Children":[{"Type":"NodeText","Data":"Redis的复制功能支持多个数据库之间的数据同步"},{"Type":"NodeSoftBreak","Data":"\n","Properties":{"id":""}},{"Type":"NodeText","Data":"通过Redis的复制功能可以很好的实现数据库的 读写分离，提高服务器的负载能力。"},{"Type":"NodeSoftBreak","Data":"\n","Properties":{"id":""}},{"Type":"NodeText","Data":"主数据库(Master)主要进行写操作，而从数据库(Slave)负责读操作"},{"Type":"NodeSoftBreak","Data":"\n","Properties":{"id":""}},{"Type":"NodeText","Data":"一个主数据库可以有多个从数据库，而一个从数据库只能有一个主数据库"}]},{"ID":"20230817161944-azad5kw","Type":"NodeParagraph","Properties":{"id":"20230817161944-azad5kw","updated":"20230817161944"},"Children":[{"Type":"NodeText","Data":"看这个图"},{"Type":"NodeSoftBreak","Data":"\n","Properties":{"id":""}},{"Type":"NodeImage","Properties":{"id":""},"Children":[{"Type":"NodeBang","Data":"!","Properties":{"id":""}},{"Type":"NodeOpenBracket","Data":"[","Properties":{"id":""}},{"Type":"NodeLinkText","Data":"图片描述","Properties":{"id":""}},{"Type":"NodeCloseBracket","Data":"]","Properties":{"id":""}},{"Type":"NodeOpenParen","Data":"(","Properties":{"id":""}},{"Type":"NodeLinkDest","Data":"https://img.mukewang.com/wiki/5f5e13d3096c564b08120523.jpg","Properties":{"id":""}},{"Type":"NodeCloseParen","Data":")","Properties":{"id":""}}]}]},{"ID":"20230817161945-qps1i1n","Type":"NodeParagraph","Properties":{"id":"20230817161945-qps1i1n","updated":"20230817161945"},"Children":[{"Type":"NodeText","Data":"这个就是redis的主从复制架构"},{"Type":"NodeSoftBreak","Data":"\n","Properties":{"id":""}},{"Type":"NodeText","Data":"master节点，是主数据库，负责写操作，下面的3个slave节点是从数据库，负责读操作。"},{"Type":"NodeSoftBreak","Data":"\n","Properties":{"id":""}},{"Type":"NodeText","Data":"当我们把数据写入到master节点之后，master节点会把数据同步给下面的3个从节点。"},{"Type":"NodeSoftBreak","Data":"\n","Properties":{"id":""}},{"Type":"NodeText","Data":"这就是Redis的主从复制架构。"}]},{"ID":"20230817161946-ibvb2b4","Type":"NodeParagraph","Properties":{"id":"20230817161946-ibvb2b4","updated":"20230817161946"},"Children":[{"Type":"NodeText","Data":"这种架构其实存在一个问题，如果主节点挂了，从节点是无法自动切换为主节点的。所以这个时候只能读数据，不能写数据。这样肯定还是存在单点故障的。"},{"Type":"NodeSoftBreak","Data":"\n","Properties":{"id":""}},{"Type":"NodeText","Data":"所以redis在这个架构的基础上又提供了sentinel 哨兵机制。"}]},{"ID":"20230817161947-tf6pflb","Type":"NodeHeading","HeadingLevel":2,"Properties":{"id":"20230817161947-tf6pflb","updated":"20230817161947"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"## ","Properties":{"id":""}},{"Type":"NodeText","Data":"Sentinel"}]},{"ID":"20230817161948-kvhu5km","Type":"NodeParagraph","Properties":{"id":"20230817161948-kvhu5km","updated":"20230817161948"},"Children":[{"Type":"NodeText","Data":"这个sentinel哨兵机制提供了三个功能"}]},{"ID":"20230817161949-kzfytqb","Type":"NodeList","ListData":{"Typ":1,"Tight":true,"Start":1,"Delimiter":46,"Padding":3,"Marker":"MQ==","Num":1},"Properties":{"id":"20230817161949-kzfytqb","updated":"20230817161949"},"Children":[{"ID":"20230817161950-fp3epjw","Type":"NodeListItem","Data":"1","ListData":{"Typ":1,"Tight":true,"Start":1,"Delimiter":46,"Padding":3,"Marker":"MQ==","Num":1},"Properties":{"id":"20230817161950-fp3epjw","updated":"20230817161950"},"Children":[{"ID":"20230817161951-bsgit4e","Type":"NodeParagraph","Properties":{"id":"20230817161951-bsgit4e","updated":"20230817161951"},"Children":[{"Type":"NodeText","Data":"监控：Sentinel实时监控主服务器和从服务器运行状态"}]}]},{"ID":"20230817161952-4n5bo0h","Type":"NodeListItem","Data":"2","ListData":{"Typ":1,"Tight":true,"Start":2,"Delimiter":46,"Padding":3,"Marker":"Mg==","Num":2},"Properties":{"id":"20230817161952-4n5bo0h","updated":"20230817161952"},"Children":[{"ID":"20230817161953-qwttr4i","Type":"NodeParagraph","Properties":{"id":"20230817161953-qwttr4i","updated":"20230817161953"},"Children":[{"Type":"NodeText","Data":"提醒：当被监控的某个Redis服务器出现问题时，Sentinel 可以向系统管理员发送通知， 也可以通过API向其它程序发送通知"}]}]},{"ID":"20230817161954-sa7eukf","Type":"NodeListItem","Data":"3","ListData":{"Typ":1,"Tight":true,"Start":3,"Delimiter":46,"Padding":3,"Marker":"Mw==","Num":3},"Properties":{"id":"20230817161954-sa7eukf","updated":"20230817161954"},"Children":[{"ID":"20230817161955-hjbzjqc","Type":"NodeParagraph","Properties":{"id":"20230817161955-hjbzjqc","updated":"20230817161955"},"Children":[{"Type":"NodeText","Data":"自动故障转移：当一个主服务器不能正常工作时，Sentinel可以将一个从服务器升级为主服务器， 并对其它从服务器进行配置，让它们使用新的主服务器。"}]}]}]},{"ID":"20230817161956-geod4q6","Type":"NodeParagraph","Properties":{"id":"20230817161956-geod4q6","updated":"20230817161956"},"Children":[{"Type":"NodeText","Data":"看下面这个图："},{"Type":"NodeSoftBreak","Data":"\n","Properties":{"id":""}},{"Type":"NodeImage","Properties":{"id":""},"Children":[{"Type":"NodeBang","Data":"!","Properties":{"id":""}},{"Type":"NodeOpenBracket","Data":"[","Properties":{"id":""}},{"Type":"NodeLinkText","Data":"图片描述","Properties":{"id":""}},{"Type":"NodeCloseBracket","Data":"]","Properties":{"id":""}},{"Type":"NodeOpenParen","Data":"(","Properties":{"id":""}},{"Type":"NodeLinkDest","Data":"https://img.mukewang.com/wiki/5f5e13f2099c9ee312660540.jpg","Properties":{"id":""}},{"Type":"NodeCloseParen","Data":")","Properties":{"id":""}}]}]},{"ID":"20230817161957-gh1c7w0","Type":"NodeParagraph","Properties":{"id":"20230817161957-gh1c7w0","updated":"20230817161957"},"Children":[{"Type":"NodeText","Data":"上面这两个sentine1和sentinel2就是使用redis启动的哨兵服务。"},{"Type":"NodeSoftBreak","Data":"\n","Properties":{"id":""}},{"Type":"NodeText","Data":"他们两个可以监控下面的这个主从架构的redis，当发现master宕机之后，会把slave切换为，master。"}]},{"ID":"20230817161958-t1owcll","Type":"NodeParagraph","Properties":{"id":"20230817161958-t1owcll","updated":"20230817161958"},"Children":[{"Type":"NodeText","Data":"这里面涉及两个概念，大家需要注意一下"},{"Type":"NodeSoftBreak","Data":"\n","Properties":{"id":""}},{"Type":"NodeText","Data":"一个是主观下面状态，一个是客观下线状态"},{"Type":"NodeSoftBreak","Data":"\n","Properties":{"id":""}},{"Type":"NodeText","Data":"主观下线状态表示是单个sentinel实例对节点做出的下线判断"},{"Type":"NodeSoftBreak","Data":"\n","Properties":{"id":""}},{"Type":"NodeText","Data":"客观下线状态表示是多个sentinel实例对主节点做出的下线判断"}]},{"ID":"20230817161959-rcqsdzc","Type":"NodeParagraph","Properties":{"id":"20230817161959-rcqsdzc","updated":"20230817161959"},"Children":[{"Type":"NodeText","Data":"注意：针对主节点，它具有主观下线状态和客观下线状态，在这个架构里面，如果sentinel1"},{"Type":"NodeSoftBreak","Data":"\n","Properties":{"id":""}},{"Type":"NodeText","Data":"认为master节点挂了，那么会给它标记为主观下线状态，此时，并不会进行故障转移，有可能是sentinel1误判了，当sentinel2也认为master节点挂了，那么此时会给master标记为客观下线状态，因为这个时候不是一个人认为它挂了，当被标记为客观下线状态之后，此时就会进行故障转移了，slave节点就会变成master节点了。"}]},{"ID":"20230817161960-zl4vyi4","Type":"NodeParagraph","Properties":{"id":"20230817161960-zl4vyi4","updated":"20230817161960"},"Children":[{"Type":"NodeText","Data":"针对从节点而言，只有主观下线状态，就算是误判也没有什么影响。"}]},{"ID":"20230817161961-xesk99c","Type":"NodeParagraph","Properties":{"id":"20230817161961-xesk99c","updated":"20230817161961"},"Children":[{"Type":"NodeText","Data":"这就是Redis中的sentinel哨兵机制。"}]},{"ID":"20230817161962-1jjhb51","Type":"NodeParagraph","Properties":{"id":"20230817161962-1jjhb51","updated":"20230817161962"},"Children":[{"Type":"NodeText","Data":"sentinel哨兵机制虽然解决了主从节点故障自动转移的问题，但是还存在一个问题，针对这种架构，不管你使用多少台机器，redis的最终存储能力还是和单台机器有关的。"},{"Type":"NodeSoftBreak","Data":"\n","Properties":{"id":""}},{"Type":"NodeText","Data":"如果我们想存储海量数据的话，这种架构理论上是实现不了的。"}]},{"ID":"20230817161963-ul2mj1n","Type":"NodeParagraph","Properties":{"id":"20230817161963-ul2mj1n","updated":"20230817161963"},"Children":[{"Type":"NodeText","Data":"基于此，Redis提供了集群这种架构。"}]},{"ID":"20230817161964-5kocz18","Type":"NodeHeading","HeadingLevel":2,"Properties":{"id":"20230817161964-5kocz18","updated":"20230817161964"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"## ","Properties":{"id":""}},{"Type":"NodeText","Data":"集群"}]},{"ID":"20230817161965-zucfsn6","Type":"NodeParagraph","Properties":{"id":"20230817161965-zucfsn6","updated":"20230817161965"},"Children":[{"Type":"NodeText","Data":"Redis集群是一个无中心的分布式Redis存储架构，可以在多个节点之间数据共享，解决了Redis高可用、可扩展等问题"}]},{"ID":"20230817161966-dgyfxky","Type":"NodeParagraph","Properties":{"id":"20230817161966-dgyfxky","updated":"20230817161966"},"Children":[{"Type":"NodeText","Data":"一个Redis集群包含 16384 个哈希槽（hash slot），数据库中的每个数据都属于这16384个哈希槽中的一个"},{"Type":"NodeSoftBreak","Data":"\n","Properties":{"id":""}},{"Type":"NodeText","Data":"集群使用公式 CRC16(key) % 16384 来计算键 key 属于哪个槽，集群中的每一个节点负责维护一部分哈希槽"}]},{"ID":"20230817161967-q1fj8h7","Type":"NodeParagraph","Properties":{"id":"20230817161967-q1fj8h7","updated":"20230817161967"},"Children":[{"Type":"NodeText","Data":"集群中的每个节点都有1个至N个复制品，其中一个是主节点其余的是从节点，如果主节点下线了，集群就会把这个主节点的一个从节点设置为新的主节点，继续工作"}]},{"ID":"20230817161968-u1qak27","Type":"NodeBlockquote","Properties":{"id":"20230817161968-u1qak27","updated":"20230817161968"},"Children":[{"Type":"NodeBlockquoteMarker","Data":"\u003e ","Properties":{"id":""}},{"ID":"20230817161969-s24bnaz","Type":"NodeParagraph","Properties":{"id":"20230817161969-s24bnaz","updated":"20230817161969"},"Children":[{"Type":"NodeText","Data":"注意：如果某一个主节点和它所有的从节点都下线的话，集群就会停止工作了"}]}]}]}