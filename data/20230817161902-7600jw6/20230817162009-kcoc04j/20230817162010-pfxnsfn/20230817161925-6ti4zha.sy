{"ID":"20230817161925-6ti4zha","Spec":"1","Type":"NodeDocument","Properties":{"id":"20230817161925-6ti4zha","title":"栈","updated":"20230817161925"},"Children":[{"ID":"20230817161926-kjr0caa","Type":"NodeHeading","HeadingLevel":3,"Properties":{"id":"20230817161926-kjr0caa","updated":"20230817161926"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"### ","Properties":{"id":""}},{"Type":"NodeText","Data":"栈"}]},{"ID":"20230817161927-aivcu7l","Type":"NodeParagraph","Properties":{"id":"20230817161927-aivcu7l","updated":"20230817161927"},"Children":[{"Type":"NodeText","Data":"栈在实际工程中可以用于实现浏览器的前进和后退功能"}]},{"ID":"20230817161928-5j3wep1","Type":"NodeHeading","HeadingLevel":4,"Properties":{"id":"20230817161928-5j3wep1","updated":"20230817161928"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"#### ","Properties":{"id":""}},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"a","TextMarkAHref":"https://leetcode-cn.com/problems/implement-queue-using-stacks-lcci/","TextMarkTextContent":"面试题 03.04. 化栈为队"}]},{"ID":"20230817161929-1grk7ku","Type":"NodeParagraph","Properties":{"id":"20230817161929-1grk7ku","updated":"20230817161929"},"Children":[{"Type":"NodeText","Data":"难度简单50"}]},{"ID":"20230817161930-zr6z54c","Type":"NodeParagraph","Properties":{"id":"20230817161930-zr6z54c","updated":"20230817161930"},"Children":[{"Type":"NodeText","Data":"实现一个MyQueue类，该类用两个栈来实现一个队列。"}]},{"ID":"20230817161931-qb70r8w","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockInfo":"amF2YQ==","CodeBlockCloseFence":"YGBg","Properties":{"id":"20230817161931-qb70r8w","updated":"20230817161931"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"amF2YQ==","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"class MyQueue {\n    Stack\u003cInteger\u003es1=new Stack();\n    Stack\u003cInteger\u003es2=new Stack();\n    /** Initialize your data structure here. */\n    public MyQueue() {\n\n    }\n    \n    /** Push element x to the back of queue. */\n    public void push(int x) {\n      s1.push(x);\n    }\n    \n    /** Removes the element from in front of queue and returns that element. */\n    public int pop() {\n      if(s2.isEmpty()){\n        while(!s1.isEmpty()){\n          s2.push(s1.pop());\n        }\n      }\n      if(s2.isEmpty())return -1;\n      int value=s2.pop();\n      return value;\n      \n    }\n    \n    /** Get the front element. */\n    public int peek() {\n      int top=pop();\n      s2.push(top);\n      return top;\n    }\n    \n    /** Returns whether the queue is empty. */\n    public boolean empty() {\n      return s1.isEmpty()\u0026\u0026s2.isEmpty();\n    }\n}\n\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20230817161932-ygh6o7e","Type":"NodeHeading","HeadingLevel":4,"Properties":{"id":"20230817161932-ygh6o7e","updated":"20230817161932"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"#### ","Properties":{"id":""}},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"a","TextMarkAHref":"https://leetcode-cn.com/problems/validate-stack-sequences/","TextMarkTextContent":"946. 验证栈序列"}]},{"ID":"20230817161933-xsi9px9","Type":"NodeParagraph","Properties":{"id":"20230817161933-xsi9px9","updated":"20230817161933"},"Children":[{"Type":"NodeText","Data":"难度中等228"}]},{"ID":"20230817161934-1zj1ld2","Type":"NodeParagraph","Properties":{"id":"20230817161934-1zj1ld2","updated":"20230817161934"},"Children":[{"Type":"NodeText","Data":"给定 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"pushed"},{"Type":"NodeText","Data":" 和 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"popped"},{"Type":"NodeText","Data":" 两个序列，每个序列中的 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"值都不重复"},{"Type":"NodeText","Data":"，只有当它们可能是在最初空栈上进行的推入 push 和弹出 pop 操作序列的结果时，返回 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"true"},{"Type":"NodeText","Data":"；否则，返回 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"false"},{"Type":"NodeText","Data":" 。"}]},{"ID":"20230817161935-baomzet","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockInfo":"amF2YQ==","CodeBlockCloseFence":"YGBg","Properties":{"id":"20230817161935-baomzet","updated":"20230817161935"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"amF2YQ==","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"class Solution {\n    public boolean validateStackSequences(int[] pushed, int[] popped) {\n        //按照popped队列来 popped元素只有可能是栈顶元素或者新入站的元素\n        Stack\u003cInteger\u003estack=new Stack();\n        int ind=0;\n        int n=pushed.length;\n        for(int x:popped){\n          while(ind\u003cn\u0026\u0026(stack.isEmpty()||stack.peek()!=x)){\n            stack.push(pushed[ind]);\n            ind++;\n          }\n          if(stack.pop()!=x)return false;\n        }\n        return true;\n    }\n}\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20230817161936-x19w15o","Type":"NodeHeading","HeadingLevel":4,"Properties":{"id":"20230817161936-x19w15o","updated":"20230817161936"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"#### ","Properties":{"id":""}},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"a","TextMarkAHref":"https://leetcode-cn.com/problems/valid-parentheses/","TextMarkTextContent":"20. 有效的括号"}]},{"ID":"20230817161937-sv1q8ua","Type":"NodeParagraph","Properties":{"id":"20230817161937-sv1q8ua","updated":"20230817161937"},"Children":[{"Type":"NodeText","Data":"难度简单3039"}]},{"ID":"20230817161938-iqx0y2m","Type":"NodeParagraph","Properties":{"id":"20230817161938-iqx0y2m","updated":"20230817161938"},"Children":[{"Type":"NodeText","Data":"给定一个只包括 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"'('"},{"Type":"NodeText","Data":"，"},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"')'"},{"Type":"NodeText","Data":"，"},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"'{'"},{"Type":"NodeText","Data":"，"},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"'}'"},{"Type":"NodeText","Data":"，"},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"'['"},{"Type":"NodeText","Data":"，"},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"']'"},{"Type":"NodeText","Data":" 的字符串 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"s"},{"Type":"NodeText","Data":" ，判断字符串是否有效。"}]},{"ID":"20230817161939-j4eqs7i","Type":"NodeParagraph","Properties":{"id":"20230817161939-j4eqs7i","updated":"20230817161939"},"Children":[{"Type":"NodeText","Data":"有效字符串需满足："}]},{"ID":"20230817161940-qydcay9","Type":"NodeList","ListData":{"Typ":1,"Start":1,"Delimiter":46,"Padding":3,"Marker":"MQ==","Num":1},"Properties":{"id":"20230817161940-qydcay9","updated":"20230817161940"},"Children":[{"ID":"20230817161941-lpraja1","Type":"NodeListItem","Data":"1","ListData":{"Typ":1,"Start":1,"Delimiter":46,"Padding":3,"Marker":"MQ==","Num":1},"Properties":{"id":"20230817161941-lpraja1","updated":"20230817161941"},"Children":[{"ID":"20230817161942-kvnu6dt","Type":"NodeParagraph","Properties":{"id":"20230817161942-kvnu6dt","updated":"20230817161942"},"Children":[{"Type":"NodeText","Data":"左括号必须用相同类型的右括号闭合。"}]}]},{"ID":"20230817161943-c2x562q","Type":"NodeListItem","Data":"2","ListData":{"Typ":1,"Tight":true,"Start":2,"Delimiter":46,"Padding":3,"Marker":"Mg==","Num":2},"Properties":{"id":"20230817161943-c2x562q","updated":"20230817161943"},"Children":[{"ID":"20230817161944-5gl539q","Type":"NodeParagraph","Properties":{"id":"20230817161944-5gl539q","updated":"20230817161944"},"Children":[{"Type":"NodeText","Data":"左括号必须以正确的顺序闭合"}]},{"ID":"20230817161945-vmozuq3","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockInfo":"amF2YQ==","CodeBlockCloseFence":"YGBg","Properties":{"id":"20230817161945-vmozuq3","updated":"20230817161945"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"amF2YQ==","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"class Solution {\n    public boolean isValid(String s) {\n     Stack\u003cCharacter\u003estack=new Stack();\n     char[] chars=s.toCharArray();\n    HashMap\u003cCharacter,Character\u003eh= new HashMap();\n    h.put(')','(');\n    h.put(']','[');\n    h.put('}','{');\n    for(int i=0;i\u003cs.length();i++){\n      char c=s.charAt(i);\n      switch(c){\n        case '(':\n        case '{':\n        case '[': stack.push(c);break;\n        case ')': \n        case '}':\n        case ']': \n        if(stack.isEmpty()||stack.peek()!=h.get(c)){\n          return false;\n        }\n        stack.pop();break;\n      }\n    }\n    return stack.isEmpty();\n    }\n}\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20230817161946-cofs87x","Type":"NodeHeading","HeadingLevel":4,"Properties":{"id":"20230817161946-cofs87x","updated":"20230817161946"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"#### ","Properties":{"id":""}},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"a","TextMarkAHref":"https://leetcode-cn.com/problems/remove-outermost-parentheses/","TextMarkTextContent":"1021. 删除最外层的括号"}]},{"ID":"20230817161947-77797uu","Type":"NodeParagraph","Properties":{"id":"20230817161947-77797uu","updated":"20230817161947"},"Children":[{"Type":"NodeText","Data":"难度简单195"}]},{"ID":"20230817161948-optu38c","Type":"NodeParagraph","Properties":{"id":"20230817161948-optu38c","updated":"20230817161948"},"Children":[{"Type":"NodeText","Data":"有效括号字符串为空 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"\u0026quot;\u0026quot;"},{"Type":"NodeText","Data":"、"},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"\u0026quot;(\u0026quot; + A + \u0026quot;)\u0026quot;"},{"Type":"NodeText","Data":" 或 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"A + B"},{"Type":"NodeText","Data":" ，其中 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"A"},{"Type":"NodeText","Data":" 和 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"B"},{"Type":"NodeText","Data":" 都是有效的括号字符串，"},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"+"},{"Type":"NodeText","Data":" 代表字符串的连接。"}]},{"ID":"20230817161949-tq9smh9","Type":"NodeList","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20230817161949-tq9smh9","updated":"20230817161949"},"Children":[{"ID":"20230817161950-fdveakq","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20230817161950-fdveakq","updated":"20230817161950"},"Children":[{"ID":"20230817161951-8x6f78m","Type":"NodeParagraph","Properties":{"id":"20230817161951-8x6f78m","updated":"20230817161951"},"Children":[{"Type":"NodeText","Data":"例如，"},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"\u0026quot;\u0026quot;"},{"Type":"NodeText","Data":"，"},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"\u0026quot;()\u0026quot;"},{"Type":"NodeText","Data":"，"},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"\u0026quot;(())()\u0026quot;"},{"Type":"NodeText","Data":" 和 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"\u0026quot;(()(()))\u0026quot;"},{"Type":"NodeText","Data":" 都是有效的括号字符串。"}]}]}]},{"ID":"20230817161952-jh8iz64","Type":"NodeParagraph","Properties":{"id":"20230817161952-jh8iz64","updated":"20230817161952"},"Children":[{"Type":"NodeText","Data":"如果有效字符串 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"s"},{"Type":"NodeText","Data":" 非空，且不存在将其拆分为 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"s = A + B"},{"Type":"NodeText","Data":" 的方法，我们称其为"},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"原语（primitive）"},{"Type":"NodeText","Data":"，其中 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"A"},{"Type":"NodeText","Data":" 和 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"B"},{"Type":"NodeText","Data":" 都是非空有效括号字符串。"}]},{"ID":"20230817161953-8e569gy","Type":"NodeParagraph","Properties":{"id":"20230817161953-8e569gy","updated":"20230817161953"},"Children":[{"Type":"NodeText","Data":"给出一个非空有效字符串 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"s"},{"Type":"NodeText","Data":"，考虑将其进行原语化分解，使得："},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"s = P_1 + P_2 + ... + P_k"},{"Type":"NodeText","Data":"，其中 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"P_i"},{"Type":"NodeText","Data":" 是有效括号字符串原语。"}]},{"ID":"20230817161954-x9of1mb","Type":"NodeParagraph","Properties":{"id":"20230817161954-x9of1mb","updated":"20230817161954"},"Children":[{"Type":"NodeText","Data":"对 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"s"},{"Type":"NodeText","Data":" 进行原语化分解，删除分解中每个原语字符串的最外层括号，返回 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"s"},{"Type":"NodeText","Data":" 。"}]},{"ID":"20230817161955-mtcbbzb","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockInfo":"amF2YQ==","CodeBlockCloseFence":"YGBg","Properties":{"id":"20230817161955-mtcbbzb","updated":"20230817161955"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"amF2YQ==","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"class Solution {\n    public String removeOuterParentheses(String s) {\n     int cnt=0;\n     int prev=0;\n     String ans=\"\";\n     for(int i=0;i\u003cs.length();i++){\n       if(s.charAt(i)=='(')cnt++;\n       else cnt--;\n       if(cnt==0){\n         ans+=s.substring(prev+1,i);\n         prev=i+1;\n       }\n     }\n     return ans;\n    }\n}\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20230817161956-l1qt14g","Type":"NodeHeading","HeadingLevel":4,"Properties":{"id":"20230817161956-l1qt14g","updated":"20230817161956"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"#### ","Properties":{"id":""}},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"a","TextMarkAHref":"https://leetcode-cn.com/problems/minimum-remove-to-make-valid-parentheses/","TextMarkTextContent":"1249. 移除无效的括号"}]},{"ID":"20230817161957-2z0gktz","Type":"NodeParagraph","Properties":{"id":"20230817161957-2z0gktz","updated":"20230817161957"},"Children":[{"Type":"NodeText","Data":"难度中等169"}]},{"ID":"20230817161958-8lkff19","Type":"NodeParagraph","Properties":{"id":"20230817161958-8lkff19","updated":"20230817161958"},"Children":[{"Type":"NodeText","Data":"给你一个由 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"'('"},{"Type":"NodeText","Data":"、"},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"')'"},{"Type":"NodeText","Data":" 和小写字母组成的字符串 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"s"},{"Type":"NodeText","Data":"。"}]},{"ID":"20230817161959-31wy1li","Type":"NodeParagraph","Properties":{"id":"20230817161959-31wy1li","updated":"20230817161959"},"Children":[{"Type":"NodeText","Data":"你需要从字符串中删除最少数目的 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"'('"},{"Type":"NodeText","Data":" 或者 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"')'"},{"Type":"NodeText","Data":" （可以删除任意位置的括号)，使得剩下的「括号字符串」有效。"}]},{"ID":"20230817161960-kgbmj2d","Type":"NodeParagraph","Properties":{"id":"20230817161960-kgbmj2d","updated":"20230817161960"},"Children":[{"Type":"NodeText","Data":"请返回任意一个合法字符串。"}]},{"ID":"20230817161961-m7lm9g8","Type":"NodeParagraph","Properties":{"id":"20230817161961-m7lm9g8","updated":"20230817161961"},"Children":[{"Type":"NodeText","Data":"有效「括号字符串」应当符合以下 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"任意一条"},{"Type":"NodeText","Data":" 要求："}]},{"ID":"20230817161962-7in47a9","Type":"NodeList","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20230817161962-7in47a9","updated":"20230817161962"},"Children":[{"ID":"20230817161963-fgxfdea","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20230817161963-fgxfdea","updated":"20230817161963"},"Children":[{"ID":"20230817161964-p66vwz4","Type":"NodeParagraph","Properties":{"id":"20230817161964-p66vwz4","updated":"20230817161964"},"Children":[{"Type":"NodeText","Data":"空字符串或只包含小写字母的字符串"}]}]},{"ID":"20230817161965-6f6kwg3","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20230817161965-6f6kwg3","updated":"20230817161965"},"Children":[{"ID":"20230817161966-75s6xb8","Type":"NodeParagraph","Properties":{"id":"20230817161966-75s6xb8","updated":"20230817161966"},"Children":[{"Type":"NodeText","Data":"可以被写作 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"AB"},{"Type":"NodeText","Data":"（"},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"A"},{"Type":"NodeText","Data":" 连接 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"B"},{"Type":"NodeText","Data":"）的字符串，其中 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"A"},{"Type":"NodeText","Data":" 和 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"B"},{"Type":"NodeText","Data":" 都是有效「括号字符串」"}]}]},{"ID":"20230817161967-eqmmvdq","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20230817161967-eqmmvdq","updated":"20230817161967"},"Children":[{"ID":"20230817161968-islwsqm","Type":"NodeParagraph","Properties":{"id":"20230817161968-islwsqm","updated":"20230817161968"},"Children":[{"Type":"NodeText","Data":"可以被写作 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"(A)"},{"Type":"NodeText","Data":" 的字符串，其中 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"A"},{"Type":"NodeText","Data":" 是一个有效的「括号字符串」"}]}]}]}]}]},{"ID":"20230817161969-l3fgs10","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockInfo":"amF2YQ==","CodeBlockCloseFence":"YGBg","Properties":{"id":"20230817161969-l3fgs10","updated":"20230817161969"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"amF2YQ==","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"class Solution {\n    public String minRemoveToMakeValid(String s) {\n      //正反扫一遍\n      StringBuilder str= new StringBuilder();\n      int cnt=0;\n      for(int i=0;i\u003cs.length();i++){\n        char c=s.charAt(i);\n         if(c=='('||c!=')'){\n           str.append(c);\n           if(c=='(')cnt+=1;\n         }else{\n           if(cnt==0)continue;\n           str.append(c);\n           cnt-=1;\n         }\n      }\n      cnt=0;\n      StringBuilder str1= new StringBuilder();\n      for(int i=str.length()-1;i\u003e=0;i--){\n          char c=str.charAt(i);\n         if(c==')'||c!='('){\n           str1.append(c);\n           if(c==')')cnt+=1;\n         }else{\n           if(cnt==0)continue;\n           str1.append(c);\n           cnt-=1;\n         }\n      }\n      return str1.reverse().toString();\n    }\n}\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]}]}