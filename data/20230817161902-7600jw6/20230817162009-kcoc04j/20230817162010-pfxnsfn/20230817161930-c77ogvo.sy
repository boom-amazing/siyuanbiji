{"ID":"20230817161930-c77ogvo","Spec":"1","Type":"NodeDocument","Properties":{"id":"20230817161930-c77ogvo","title":"排序算法杂记","updated":"20230817161930"},"Children":[{"ID":"20230817161931-gmseylw","Type":"NodeHeading","HeadingLevel":3,"Properties":{"id":"20230817161931-gmseylw","updated":"20230817161931"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"### ","Properties":{"id":""}},{"Type":"NodeText","Data":"排序算法杂记"}]},{"ID":"20230817161932-v1bl4zv","Type":"NodeHeading","HeadingLevel":5,"Properties":{"id":"20230817161932-v1bl4zv","updated":"20230817161932"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"##### ","Properties":{"id":""}},{"Type":"NodeText","Data":"拓扑排序"}]},{"ID":"20230817161933-teiwi46","Type":"NodeParagraph","Properties":{"id":"20230817161933-teiwi46","updated":"20230817161933"},"Children":[{"Type":"NodeText","Data":"拓扑排序是图中的一张排序 他根据有向无环图的顺序输出 他每次输出的节点的入度为0 我们通常那个可以用队列来模拟这个过程 该类排序也可以广泛应用于需要先后顺序的算法场景中"}]},{"ID":"20230817161934-46fi3ey","Type":"NodeParagraph","Properties":{"id":"20230817161934-46fi3ey","updated":"20230817161934"},"Children":[{"Type":"NodeText","Data":"经典例题："}]},{"ID":"20230817161935-4d9ik24","Type":"NodeHeading","HeadingLevel":4,"Properties":{"id":"20230817161935-4d9ik24","updated":"20230817161935"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"#### ","Properties":{"id":""}},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"a","TextMarkAHref":"https://leetcode-cn.com/problems/course-schedule/","TextMarkTextContent":"207. 课程表"}]},{"ID":"20230817161936-06lrzjb","Type":"NodeParagraph","Properties":{"id":"20230817161936-06lrzjb","updated":"20230817161936"},"Children":[{"Type":"NodeText","Data":"难度中等1167"}]},{"ID":"20230817161937-p8jgdn0","Type":"NodeParagraph","Properties":{"id":"20230817161937-p8jgdn0","updated":"20230817161937"},"Children":[{"Type":"NodeText","Data":"你这个学期必须选修 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"numCourses"},{"Type":"NodeText","Data":" 门课程，记为 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"0"},{"Type":"NodeText","Data":" 到 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"numCourses - 1"},{"Type":"NodeText","Data":" 。"}]},{"ID":"20230817161938-p6g9f8l","Type":"NodeParagraph","Properties":{"id":"20230817161938-p6g9f8l","updated":"20230817161938"},"Children":[{"Type":"NodeText","Data":"在选修某些课程之前需要一些先修课程。 先修课程按数组 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"prerequisites"},{"Type":"NodeText","Data":" 给出，其中 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"prerequisites[i] = [ai, bi]"},{"Type":"NodeText","Data":" ，表示如果要学习课程 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"ai"},{"Type":"NodeText","Data":" 则 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"必须"},{"Type":"NodeText","Data":" 先学习课程 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"bi"},{"Type":"NodeText","Data":" 。"}]},{"ID":"20230817161939-2alaf32","Type":"NodeList","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20230817161939-2alaf32","updated":"20230817161939"},"Children":[{"ID":"20230817161940-snhhakw","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20230817161940-snhhakw","updated":"20230817161940"},"Children":[{"ID":"20230817161941-vwktpjo","Type":"NodeParagraph","Properties":{"id":"20230817161941-vwktpjo","updated":"20230817161941"},"Children":[{"Type":"NodeText","Data":"例如，先修课程对 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"[0, 1]"},{"Type":"NodeText","Data":" 表示：想要学习课程 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"0"},{"Type":"NodeText","Data":" ，你需要先完成课程 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"1"},{"Type":"NodeText","Data":" 。"}]}]}]},{"ID":"20230817161942-rg228z6","Type":"NodeParagraph","Properties":{"id":"20230817161942-rg228z6","updated":"20230817161942"},"Children":[{"Type":"NodeText","Data":"请你判断是否可能完成所有课程的学习？如果可以，返回 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"true"},{"Type":"NodeText","Data":" ；否则，返回 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"false"},{"Type":"NodeText","Data":" 。"}]},{"ID":"20230817161943-0hdkuhb","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockInfo":"amF2YQ==","CodeBlockCloseFence":"YGBg","Properties":{"id":"20230817161943-0hdkuhb","updated":"20230817161943"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"amF2YQ==","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"class Solution {\n    public boolean canFinish(int numCourses, int[][] prerequisites) {\n          int [] indeg =new int[numCourses];\n          List\u003cList\u003cInteger\u003e\u003e list=new ArrayList();\n          for(int i=0;i\u003cnumCourses;i++){\n            list.add(new ArrayList());\n          }\n          for(int [] x: prerequisites){\n                indeg[x[0]]++;\n                list.get(x[1]).add(x[0]);       \n          }\n          LinkedList\u003cInteger\u003e q=new LinkedList();\n         for(int i=0;i\u003cnumCourses;i++){\n           if(indeg[i]==0){\n             q.offer(i);\n           }\n         }\n         int cnt=0;\n         while(!q.isEmpty()){\n          int ind= q.poll();\n          cnt++;\n          for(Integer o:list.get(ind)){\n            indeg[o]--;\n            if(indeg[o]==0)q.offer(o);\n          }\n         }\n         return cnt==numCourses;\n    }\n}\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20230817161944-mm03k51","Type":"NodeHeading","HeadingLevel":4,"Properties":{"id":"20230817161944-mm03k51","updated":"20230817161944"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"#### ","Properties":{"id":""}},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"a","TextMarkAHref":"https://leetcode-cn.com/problems/course-schedule-ii/","TextMarkTextContent":"210. 课程表 II"}]},{"ID":"20230817161945-45417yw","Type":"NodeParagraph","Properties":{"id":"20230817161945-45417yw","updated":"20230817161945"},"Children":[{"Type":"NodeText","Data":"难度中等582"}]},{"ID":"20230817161946-k8l7mks","Type":"NodeParagraph","Properties":{"id":"20230817161946-k8l7mks","updated":"20230817161946"},"Children":[{"Type":"NodeText","Data":"现在你总共有 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"numCourses"},{"Type":"NodeText","Data":" 门课需要选，记为 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"0"},{"Type":"NodeText","Data":" 到 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"numCourses - 1"},{"Type":"NodeText","Data":"。给你一个数组 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"prerequisites"},{"Type":"NodeText","Data":" ，其中 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"prerequisites[i] = [ai, bi]"},{"Type":"NodeText","Data":" ，表示在选修课程 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"ai"},{"Type":"NodeText","Data":" 前 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"必须"},{"Type":"NodeText","Data":" 先选修 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"bi"},{"Type":"NodeText","Data":" 。"}]},{"ID":"20230817161947-739n4yp","Type":"NodeList","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20230817161947-739n4yp","updated":"20230817161947"},"Children":[{"ID":"20230817161948-rp6oegq","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20230817161948-rp6oegq","updated":"20230817161948"},"Children":[{"ID":"20230817161949-rknltcn","Type":"NodeParagraph","Properties":{"id":"20230817161949-rknltcn","updated":"20230817161949"},"Children":[{"Type":"NodeText","Data":"例如，想要学习课程 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"0"},{"Type":"NodeText","Data":" ，你需要先完成课程 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"1"},{"Type":"NodeText","Data":" ，我们用一个匹配来表示："},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"[0,1]"},{"Type":"NodeText","Data":" 。"}]}]}]},{"ID":"20230817161950-jid47wv","Type":"NodeParagraph","Properties":{"id":"20230817161950-jid47wv","updated":"20230817161950"},"Children":[{"Type":"NodeText","Data":"返回你为了学完所有课程所安排的学习顺序。可能会有多个正确的顺序，你只要返回 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"任意一种"},{"Type":"NodeText","Data":" 就可以了。如果不可能完成所有课程，返回 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"一个空数组"},{"Type":"NodeText","Data":" 。"}]},{"ID":"20230817161951-oy6ai12","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockInfo":"amF2YQ==","CodeBlockCloseFence":"YGBg","Properties":{"id":"20230817161951-oy6ai12","updated":"20230817161951"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"amF2YQ==","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"class Solution {\n     public int[] findOrder(int numCourses, int[][] prerequisites) {\n  \n          int [] indeg =new int[numCourses];\n          List\u003cList\u003cInteger\u003e\u003e list=new ArrayList();\n          for(int i=0;i\u003cnumCourses;i++){\n            list.add(new ArrayList());\n          }\n          for(int [] x: prerequisites){\n                indeg[x[0]]++;\n                list.get(x[1]).add(x[0]);       \n          }\n          LinkedList\u003cInteger\u003e q=new LinkedList();\n         for(int i=0;i\u003cnumCourses;i++){\n           if(indeg[i]==0){\n             q.offer(i);\n           }\n         }\n         int [] ans=new int[numCourses];\n         int k=0;\n         while(!q.isEmpty()){\n          int ind= q.poll();\n          ans[k++]=ind;\n          for(Integer o:list.get(ind)){\n            indeg[o]--;\n            if(indeg[o]==0)q.offer(o);\n          }\n         }\n         if(k!=numCourses){\n           return new int[]{};\n         }else{\n           return ans;\n         }\n    }\n\n}\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20230817161952-u8ljyg9","Type":"NodeHeading","HeadingLevel":5,"Properties":{"id":"20230817161952-u8ljyg9","updated":"20230817161952"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"##### ","Properties":{"id":""}},{"Type":"NodeText","Data":"计数排序"}]},{"ID":"20230817161953-zlqg03l","Type":"NodeParagraph","Properties":{"id":"20230817161953-zlqg03l","updated":"20230817161953"},"Children":[{"Type":"NodeText","Data":"就是对有限范围量的数据进行计数 最后在给他按照数字大小依次排序"}]},{"ID":"20230817161954-cnvh6k7","Type":"NodeHeading","HeadingLevel":4,"Properties":{"id":"20230817161954-cnvh6k7","updated":"20230817161954"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"#### ","Properties":{"id":""}},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"a","TextMarkAHref":"https://leetcode-cn.com/problems/relative-sort-array/","TextMarkTextContent":"1122. 数组的相对排序"}]},{"ID":"20230817161955-1ghzmnu","Type":"NodeParagraph","Properties":{"id":"20230817161955-1ghzmnu","updated":"20230817161955"},"Children":[{"Type":"NodeText","Data":"难度简单202"}]},{"ID":"20230817161956-uufyksc","Type":"NodeParagraph","Properties":{"id":"20230817161956-uufyksc","updated":"20230817161956"},"Children":[{"Type":"NodeText","Data":"给你两个数组，"},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"arr1"},{"Type":"NodeText","Data":" 和 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"arr2"},{"Type":"NodeText","Data":"，"},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"arr2"},{"Type":"NodeText","Data":" 中的元素各不相同，"},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"arr2"},{"Type":"NodeText","Data":" 中的每个元素都出现在 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"arr1"},{"Type":"NodeText","Data":" 中。"}]},{"ID":"20230817161957-0a3iuae","Type":"NodeParagraph","Properties":{"id":"20230817161957-0a3iuae","updated":"20230817161957"},"Children":[{"Type":"NodeText","Data":"对 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"arr1"},{"Type":"NodeText","Data":" 中的元素进行排序，使 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"arr1"},{"Type":"NodeText","Data":" 中项的相对顺序和 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"arr2"},{"Type":"NodeText","Data":" 中的相对顺序相同。未在 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"arr2"},{"Type":"NodeText","Data":" 中出现过的元素需要按照升序放在 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"arr1"},{"Type":"NodeText","Data":" 的末尾。"}]},{"ID":"20230817161958-zzhh13t","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockInfo":"amF2YQ==","CodeBlockCloseFence":"YGBg","Properties":{"id":"20230817161958-zzhh13t","updated":"20230817161958"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"amF2YQ==","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"class Solution {\n    public int[] relativeSortArray(int[] arr1, int[] arr2) {\n       int [] cnt=new int[1000+5];\n       for(int x:arr1){\n         cnt[x]++;\n       }\n       int k=0;\n       for(int y:arr2){\n         while(cnt[y]--\u003e0){\n           arr1[k++]=y;\n         }\n       }\n       for(int i=0;i\u003c=1000;i++){\n         if(cnt[i]\u003c=0)continue;\n         while(cnt[i]--\u003e0)arr1[k++]=i;\n       }\n       return arr1;\n    }\n}\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20230817161959-op5zws0","Type":"NodeHeading","HeadingLevel":5,"Properties":{"id":"20230817161959-op5zws0","updated":"20230817161959"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"##### ","Properties":{"id":""}},{"Type":"NodeText","Data":"区间排序"}]},{"ID":"20230817161960-a6mkois","Type":"NodeHeading","HeadingLevel":4,"Properties":{"id":"20230817161960-a6mkois","updated":"20230817161960"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"#### ","Properties":{"id":""}},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"a","TextMarkAHref":"https://leetcode-cn.com/problems/SsGoHC/","TextMarkTextContent":"剑指 Offer II 074. 合并区间"}]},{"ID":"20230817161961-klxftsn","Type":"NodeParagraph","Properties":{"id":"20230817161961-klxftsn","updated":"20230817161961"},"Children":[{"Type":"NodeText","Data":"难度中等16"}]},{"ID":"20230817161962-b3pnrnl","Type":"NodeParagraph","Properties":{"id":"20230817161962-b3pnrnl","updated":"20230817161962"},"Children":[{"Type":"NodeText","Data":"以数组 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"intervals"},{"Type":"NodeText","Data":" 表示若干个区间的集合，其中单个区间为 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"intervals[i] = [starti, endi]"},{"Type":"NodeText","Data":" 。请你合并所有重叠的区间，并返回一个不重叠的区间数组，该数组需恰好覆盖输入中的所有区间。"}]},{"ID":"20230817161963-ybldj0b","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockInfo":"amF2YQ==","CodeBlockCloseFence":"YGBg","Properties":{"id":"20230817161963-ybldj0b","updated":"20230817161963"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"amF2YQ==","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"class Solution {\n    public int[][] merge(int[][] intervals) {\n     Arrays.sort(intervals,new Comparator\u003cint []\u003e(){\n       public int compare(int []arr1,int []arr2){\n         if(arr1[0]!=arr2[0]){\n           return arr1[0]-arr2[0];\n         }else{\n           return arr2[1]-arr1[1];\n         }\n       }\n     });\n    List\u003cint []\u003e ans =new ArrayList();\n    int rmax=-1;\n    int l,r;\n    for(int [] x: intervals){\n       l=x[0];\n       r=x[1];\n      if(rmax\u003cl)ans.add(new int[]{l,r});\n      else{\n        int ind=Math.max(rmax,r);\n        ans.get(ans.size()-1)[1]=ind;\n      }\n      rmax=ans.get(ans.size()-1)[1];\n    }\n     return  ans.toArray(new int[ans.size()][]);\n    }\n\n}\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20230817161964-n7cynbb","Type":"NodeHeading","HeadingLevel":4,"Properties":{"id":"20230817161964-n7cynbb","updated":"20230817161964"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"#### ","Properties":{"id":""}},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"a","TextMarkAHref":"https://leetcode-cn.com/problems/remove-covered-intervals/","TextMarkTextContent":"1288. 删除被覆盖区间"}]},{"ID":"20230817161965-uug57y6","Type":"NodeParagraph","Properties":{"id":"20230817161965-uug57y6","updated":"20230817161965"},"Children":[{"Type":"NodeText","Data":"难度中等64"}]},{"ID":"20230817161966-w05xtfz","Type":"NodeParagraph","Properties":{"id":"20230817161966-w05xtfz","updated":"20230817161966"},"Children":[{"Type":"NodeText","Data":"给你一个区间列表，请你删除列表中被其他区间所覆盖的区间。"}]},{"ID":"20230817161967-mpngcsh","Type":"NodeParagraph","Properties":{"id":"20230817161967-mpngcsh","updated":"20230817161967"},"Children":[{"Type":"NodeText","Data":"只有当 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"c \u0026lt;= a"},{"Type":"NodeText","Data":" 且 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"b \u0026lt;= d"},{"Type":"NodeText","Data":" 时，我们才认为区间 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"[a,b)"},{"Type":"NodeText","Data":" 被区间 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"[c,d)"},{"Type":"NodeText","Data":" 覆盖。"}]},{"ID":"20230817161968-5tuwe9a","Type":"NodeParagraph","Properties":{"id":"20230817161968-5tuwe9a","updated":"20230817161968"},"Children":[{"Type":"NodeText","Data":"在完成所有删除操作后，请你返回列表中剩余区间的数目。"}]},{"ID":"20230817161969-7jxsvyd","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockInfo":"amF2YQ==","CodeBlockCloseFence":"YGBg","Properties":{"id":"20230817161969-7jxsvyd","updated":"20230817161969"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"amF2YQ==","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"class Solution {\n    public int removeCoveredIntervals(int[][] intervals) {\n            if(intervals.length==0) return 0;\n        Arrays.sort(intervals, new Comparator\u003cint[]\u003e() {\n            public int compare(int[] o1, int[] o2) {\n                return o1[0]==o2[0]?o2[1]-o1[1]:o1[0]-o2[0];\n            }\n        });\n        int pre=-1;\n        int cnt=0;\n        for(int [] x:intervals){\n          if(pre\u003e=x[1]){\n            cnt++;\n          }\n          pre=Math.max(pre,x[1]);\n        }\n        return intervals.length -cnt;\n    }\n}\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]}]}