{"ID":"20230817162002-ygf7chy","Spec":"1","Type":"NodeDocument","Properties":{"id":"20230817162002-ygf7chy","title":"mapreduce之小文件问题","updated":"20230817162002"},"Children":[{"ID":"20230817162003-escbfq8","Type":"NodeHeading","HeadingLevel":5,"Properties":{"id":"20230817162003-escbfq8","updated":"20230817162003"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"##### ","Properties":{"id":""}},{"Type":"NodeText","Data":"mapreduce之小文件问题"}]},{"ID":"20230817162004-k12mpew","Type":"NodeParagraph","Properties":{"id":"20230817162004-k12mpew","updated":"20230817162004"},"Children":[{"Type":"NodeText","Data":"问题背景：当我们用mapreduce处理一些小文件问题时 系统会给每个小文件开启一个map任务 启动map任务是非常耗时间的 远远大于了处理这个小文件的时间"}]},{"ID":"20230817162005-soh0ppt","Type":"NodeParagraph","Properties":{"id":"20230817162005-soh0ppt","updated":"20230817162005"},"Children":[{"Type":"NodeText","Data":"解决方法：我们可以通过sequencefile或者mapfile来讲这些小文件聚合成一个二进制文件 最后在将其用于mapreduce的计算"}]},{"ID":"20230817162006-qvol90q","Type":"NodeParagraph","Properties":{"id":"20230817162006-qvol90q","updated":"20230817162006"},"Children":[{"Type":"NodeText","Data":"代码："}]},{"ID":"20230817162007-shjbloi","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockInfo":"amF2YQ==","CodeBlockCloseFence":"YGBg","Properties":{"id":"20230817162007-shjbloi","updated":"20230817162007"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"amF2YQ==","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"//通过sequencefile这个类的write方法写进hdfs的seqfile文件中\npublic static void main(String[] args) throws Exception {\n        write(\"D:\\\\smallfile\",\"/seqfile\");\n        read(\"/seqfile\");\n    }\n    /**\n     *\n     * @param inputdir 输入目录\n     * @param outputfile 输出文件\n     * @throws Exception\n     */\n    public static void write(String inputdir,String outputfile) throws  Exception{\n        Configuration configuration = new Configuration();\n        configuration.set(\"fs.defaultFS\",\"hdfs://bigdata01:9000\");\n        FileSystem fileSystem = FileSystem.get(configuration);\n        fileSystem.delete(new Path(outputfile),true);\n\n        SequenceFile.Writer.Option[] opts = new SequenceFile.Writer.Option[]{\n                SequenceFile.Writer.file(new Path(outputfile)),\n                SequenceFile.Writer.keyClass(Text.class),\n                SequenceFile.Writer.valueClass(Text.class)\n        };\n        SequenceFile.Writer writer = SequenceFile.createWriter(configuration, opts);\n        File inputDirPath = new File(inputdir);\n        if(inputDirPath.isDirectory()){\n            File[] files = inputDirPath.listFiles();\n            for (File file:files) {\n                String content= FileUtils.readFileToString(file,\"UTF-8\");\n                String filename=file.getName();\n                Text key = new Text(filename);\n                Text value = new Text(content);\n                writer.append(key,value);\n            }\n        }\n        writer.close();\n    }\n    public static  void read(String inputFile) throws IOException {\n        Configuration configuration = new Configuration();\n        configuration.set(\"fs.defaultFS\",\"hdfs://bigdata01:9000\");\n        SequenceFile.Reader reader = new SequenceFile.Reader\n                (configuration, SequenceFile.Reader.file(new Path(inputFile)));\n        Text key=new Text();\n        Text value=new Text();\n        while (reader.next(key,value)){\n            System.out.print(\"文件名：\"+key.toString()+\",\");\n            System.out.println(\"文件内容：\"+value.toString());\n        }\n        reader.close();\n    }\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20230817162008-y8wn0vp","Type":"NodeParagraph","Properties":{"id":"20230817162008-y8wn0vp","updated":"20230817162008"},"Children":[{"Type":"NodeText","Data":"最后在执行mapreduce时 指定一下编译类型即可"}]},{"ID":"20230817162009-8fnu39t","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockInfo":"amF2YQ==","CodeBlockCloseFence":"YGBg","Properties":{"id":"20230817162009-8fnu39t","updated":"20230817162009"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"amF2YQ==","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"job.setInputFormatClass(SequenceFileInputFormat.class);\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]}]}