{"ID":"20230817161958-y9ewobv","Spec":"1","Type":"NodeDocument","Properties":{"id":"20230817161958-y9ewobv","title":"HDFS读取文件过程","updated":"20230817161958"},"Children":[{"ID":"20230817161959-wle5sav","Type":"NodeHeading","HeadingLevel":4,"Properties":{"id":"20230817161959-wle5sav","updated":"20230817161959"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"#### ","Properties":{"id":""}},{"Type":"NodeText","Data":"HDFS读取文件过程"}]},{"ID":"20230817161960-lgu2ltk","Type":"NodeParagraph","Properties":{"id":"20230817161960-lgu2ltk","updated":"20230817161960"},"Children":[{"Type":"NodeText","Data":"1、客户端调用filesystem对象的open方法希望打开对应的文件，这个对象是distributefilesystem的一个实例"}]},{"ID":"20230817161961-q3il4ey","Type":"NodeParagraph","Properties":{"id":"20230817161961-q3il4ey","updated":"20230817161961"},"Children":[{"Type":"NodeText","Data":"2、然后distributefilesystem通过RPC 远程调用namenode，来确定文件的起始位置，namenode返回存储该块副本的datanode地址 并且这些datanode地址会根据他们与客服端的距离进行排序"}]},{"ID":"20230817161962-jak6be2","Type":"NodeParagraph","Properties":{"id":"20230817161962-jak6be2","updated":"20230817161962"},"Children":[{"Type":"NodeText","Data":"3、distributefilesystem返回一个FSDataInputstream对象来给客户端读取数据  FSDataInputstream转而被封装成DFSinputstream，该对象管理着datanode与客户端的io，接着客户端对这个输入流调用read方法"}]},{"ID":"20230817161963-ij3o8tc","Type":"NodeParagraph","Properties":{"id":"20230817161963-ij3o8tc","updated":"20230817161963"},"Children":[{"Type":"NodeText","Data":"4、DFSinputstream 连接距离客户端最近的datanode 通过反复调用read方法来读取文件起始几个块的数据，read方法可以将读取的数据传给客户端"}]},{"ID":"20230817161964-xw7jvrr","Type":"NodeParagraph","Properties":{"id":"20230817161964-xw7jvrr","updated":"20230817161964"},"Children":[{"Type":"NodeText","Data":"5、然后再找到下一个更佳的datanode继续读取文件数据"}]},{"ID":"20230817161965-tuaj05r","Type":"NodeParagraph","Properties":{"id":"20230817161965-tuaj05r","updated":"20230817161965"},"Children":[{"Type":"NodeText","Data":"6、文件读取完毕后 会调用close方法关闭FSdatainputstream"}]},{"ID":"20230817161966-qrz1kcy","Type":"NodeHeading","HeadingLevel":5,"Properties":{"id":"20230817161966-qrz1kcy","updated":"20230817161966"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"##### ","Properties":{"id":""}},{"Type":"NodeText","Data":"读取过程中与datanode通信失败或者遇到损坏的块怎么办？"}]},{"ID":"20230817161967-cyrcobd","Type":"NodeParagraph","Properties":{"id":"20230817161967-cyrcobd","updated":"20230817161967"},"Children":[{"Type":"NodeText","Data":"在读取数据的过程中如果与datanode通信发生错误，会尝试与最近的datanode连接读取数据，同时也会记录那个故障的datanode保证以后不会反复读取该节点的后续块。同时dfsinputstream也会校验读取数据的完整性，如果发现有损坏的块 DFSinputstream也会从其他datanode读取其副本 并将损坏的块通知给namenode"}]},{"ID":"20230817161968-8y02n7y","Type":"NodeHeading","HeadingLevel":5,"Properties":{"id":"20230817161968-8y02n7y","updated":"20230817161968"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"##### ","Properties":{"id":""}},{"Type":"NodeText","Data":"这样设计该系统有什么好处？"}]},{"ID":"20230817161969-37da293","Type":"NodeParagraph","Properties":{"id":"20230817161969-37da293","updated":"20230817161969"},"Children":[{"Type":"NodeText","Data":"这样设计可以使客户端直接连接到datanode检索数据 且namenode会告知客户端每个块最佳的datanode 由于数据流分散到集群中各个datanode 所以这种设计能使hdfs扩展到大量的并发客户端 同时namenode只需要响应块位置的请求(块位置也存储在内存中 非常高效) 无需相应数据请求"}]}]}