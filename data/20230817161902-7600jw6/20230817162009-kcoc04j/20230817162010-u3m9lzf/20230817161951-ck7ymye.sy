{"ID":"20230817161951-ck7ymye","Spec":"1","Type":"NodeDocument","Properties":{"id":"20230817161951-ck7ymye","title":"HDFS写入文件的过程分析","updated":"20230817161951"},"Children":[{"ID":"20230817161952-hvpiwvh","Type":"NodeHeading","HeadingLevel":4,"Properties":{"id":"20230817161952-hvpiwvh","updated":"20230817161952"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"#### ","Properties":{"id":""}},{"Type":"NodeText","Data":"HDFS写入文件的过程分析"}]},{"ID":"20230817161953-njq3cpt","Type":"NodeParagraph","Properties":{"id":"20230817161953-njq3cpt","updated":"20230817161953"},"Children":[{"Type":"NodeText","Data":"1、客户端通过对DistirbutedFilesystem 对象调用create方法 来创建文件"}]},{"ID":"20230817161954-f16azfe","Type":"NodeParagraph","Properties":{"id":"20230817161954-f16azfe","updated":"20230817161954"},"Children":[{"Type":"NodeText","Data":"2、DistirbutedFilesystem 通过RPC远程调用namenode 在命名空间中创建一个文件 此时文件中还没有相应的数据块（在此过程中namenode会执行各种不同的检查来确保这个文件不存在以及客户端有新建该文件的权限）"}]},{"ID":"20230817161955-omkud1w","Type":"NodeParagraph","Properties":{"id":"20230817161955-omkud1w","updated":"20230817161955"},"Children":[{"Type":"NodeText","Data":"3、DistirbutedFilesystem向客户端返回一个FSdataoutputstream对象，由此客户端可以开始写入数据，和读取数据一样 FSdataoutputstream被封装成DFSoutputstream对象 该对象用于datanode与namenode的通信"}]},{"ID":"20230817161956-jusgwn9","Type":"NodeParagraph","Properties":{"id":"20230817161956-jusgwn9","updated":"20230817161956"},"Children":[{"Type":"NodeText","Data":"4、DFSoutputstream将文件分成一个个的数据包，并写入数据队列（dataqueue)  datastreamer用于处理数据队列  datastreamer挑选适合存储副本的一组datanode 并据此来要求namenode分配新的数据块 这一组datanode构成一个管线 datastreamer将数据包流式的传输到管线的第一个datanode 然后第一个datanode通过管线传到第二个datanode 。。。 直至传到最后一个"}]},{"ID":"20230817161957-nvon01v","Type":"NodeParagraph","Properties":{"id":"20230817161957-nvon01v","updated":"20230817161957"},"Children":[{"Type":"NodeText","Data":"5、同时DFSOutputstream 也维护着一个确认队列 来等待管道的确认信息 收到管道所有的确认信息后 数据包从确认队列中删除"}]},{"ID":"20230817161958-2oebrq2","Type":"NodeParagraph","Properties":{"id":"20230817161958-2oebrq2","updated":"20230817161958"},"Children":[{"Type":"NodeText","Data":"6、客户端完成写入后 调用close方法 该操作会将剩余的所有的数据包写入管道 并告诉namenode在文件写入完成之前 等待确认 最后写入完成后 namenode完成对数据信息的更新(因为datastreamer请求分配数据块时 已经知道了文件由那些块构成 所以他在返回成功前只需要等待数据块进行最小量的复制)。"}]},{"ID":"20230817161959-yh81xqy","Type":"NodeHeading","HeadingLevel":5,"Properties":{"id":"20230817161959-yh81xqy","updated":"20230817161959"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"##### ","Properties":{"id":""}},{"Type":"NodeText","Data":"写入过程发生故障怎么办？"}]},{"ID":"20230817161960-6s1etqq","Type":"NodeParagraph","Properties":{"id":"20230817161960-6s1etqq","updated":"20230817161960"},"Children":[{"Type":"NodeText","Data":"任何在datanode写入过程中 发生故障时 会进行一下操作："}]},{"ID":"20230817161961-smb274x","Type":"NodeParagraph","Properties":{"id":"20230817161961-smb274x","updated":"20230817161961"},"Children":[{"Type":"NodeText","Data":"1、首先关闭管线，确认队列中的所有数据包都添加回数据队列的最前端，以确保下游的datanode不会漏掉任何一个数据包"}]},{"ID":"20230817161962-41ifmnb","Type":"NodeParagraph","Properties":{"id":"20230817161962-41ifmnb","updated":"20230817161962"},"Children":[{"Type":"NodeText","Data":"2、为存储在另一个正常的datanode指定一个新的标识 并将该标识传送给namenode  以便故障的datanode在恢复后能够删除存储的部分数据块"}]},{"ID":"20230817161963-9s38m5s","Type":"NodeParagraph","Properties":{"id":"20230817161963-9s38m5s","updated":"20230817161963"},"Children":[{"Type":"NodeText","Data":"3、从管线中删除故障的datanode 基于两个正常的datanode重新构建一条管线 余下的数据块写入管线中的正常datanode"}]},{"ID":"20230817161964-s93hofs","Type":"NodeParagraph","Properties":{"id":"20230817161964-s93hofs","updated":"20230817161964"},"Children":[{"Type":"NodeText","Data":"4、namenode在注意到复本量不足时 会在另一个节点创建一个新的副本。后续数据块继续正常接收处理"}]},{"ID":"20230817161965-023dkvp","Type":"NodeHeading","HeadingLevel":5,"Properties":{"id":"20230817161965-023dkvp","updated":"20230817161965"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"##### ","Properties":{"id":""}},{"Type":"NodeText","Data":"复本怎么放？"}]},{"ID":"20230817161966-4kg6m9x","Type":"NodeParagraph","Properties":{"id":"20230817161966-4kg6m9x","updated":"20230817161966"},"Children":[{"Type":"NodeText","Data":"Hadoop的默认布局策略是在运行客户端的第一个节点上放置第一个复本（如果客户端运行在集群之外 就随机选择一个节点 不过系统会避免挑选那些存储太慢或太忙的节点）"}]},{"ID":"20230817161967-xydqgxg","Type":"NodeParagraph","Properties":{"id":"20230817161967-xydqgxg","updated":"20230817161967"},"Children":[{"Type":"NodeText","Data":"第二个副本放在与第一个不同且随机另外选择的机架中节点上"}]},{"ID":"20230817161968-xksxj0a","Type":"NodeParagraph","Properties":{"id":"20230817161968-xksxj0a","updated":"20230817161968"},"Children":[{"Type":"NodeText","Data":"第三个副本放在与第二个副本相同的机架上 且随机选择另一个节点"}]},{"ID":"20230817161969-of4b436","Type":"NodeParagraph","Properties":{"id":"20230817161969-of4b436","updated":"20230817161969"},"Children":[{"Type":"NodeText","Data":"其他副本放在集群中随机选择的节点上 不过系统会尽量避免在同一个机架上放太多副本"}]}]}