{"ID":"20230817161948-uyc08pv","Spec":"1","Type":"NodeDocument","Properties":{"id":"20230817161948-uyc08pv","title":"OutputFormat分析","updated":"20230817161948"},"Children":[{"ID":"20230817161949-9lkq83s","Type":"NodeHeading","HeadingLevel":2,"Properties":{"id":"20230817161949-9lkq83s","updated":"20230817161949"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"## ","Properties":{"id":""}},{"Type":"NodeText","Data":"OutputFormat分析"}]},{"ID":"20230817161950-l987eaa","Type":"NodeParagraph","Properties":{"id":"20230817161950-l987eaa","updated":"20230817161950"},"Children":[{"Type":"NodeText","Data":"前面我们分析了InputFormat，下面我们来分析一下OutputFormat，顾名思义，这个是控制MapReduce输出的。"}]},{"ID":"20230817161951-bid6fp5","Type":"NodeList","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20230817161951-bid6fp5","updated":"20230817161951"},"Children":[{"ID":"20230817161952-ockaaxc","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20230817161952-ockaaxc","updated":"20230817161952"},"Children":[{"ID":"20230817161953-aie59od","Type":"NodeParagraph","Properties":{"id":"20230817161953-aie59od","updated":"20230817161953"},"Children":[{"Type":"NodeText","Data":"OutputFormat是输出数据的顶层基类"}]}]},{"ID":"20230817161954-mb39mub","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20230817161954-mb39mub","updated":"20230817161954"},"Children":[{"ID":"20230817161955-zu52sue","Type":"NodeParagraph","Properties":{"id":"20230817161955-zu52sue","updated":"20230817161955"},"Children":[{"Type":"NodeText","Data":"FileOutputFormat：文件数据处理基类"}]}]},{"ID":"20230817161956-timonhs","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20230817161956-timonhs","updated":"20230817161956"},"Children":[{"ID":"20230817161957-lf0mqex","Type":"NodeParagraph","Properties":{"id":"20230817161957-lf0mqex","updated":"20230817161957"},"Children":[{"Type":"NodeText","Data":"TextOutputFormat：默认文本文件处理类"}]}]}]},{"ID":"20230817161958-nzeb1qe","Type":"NodeParagraph","Properties":{"id":"20230817161958-nzeb1qe","updated":"20230817161958"},"Children":[{"Type":"NodeText","Data":"这几个其实和InputFormat中的那几个文本处理类是对应着的，当然了针对输出数据还有其它类型的处理类，我们在这先分析最常见的文本文件处理类，其他类型的等我们遇到具体场景再具体分析。"}]},{"ID":"20230817161959-r7f40ey","Type":"NodeParagraph","Properties":{"id":"20230817161959-r7f40ey","updated":"20230817161959"},"Children":[{"Type":"NodeText","Data":"我们来看一下OutputFormat的源码，这个类主要由三个方法"}]},{"ID":"20230817161960-nn6qigv","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockInfo":"amF2YQ==","CodeBlockCloseFence":"YGBg","Properties":{"id":"20230817161960-nn6qigv","updated":"20230817161960"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"amF2YQ==","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"getRecordWriter\ncheckOutputSpecs\ngetOutputCommitter\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20230817161961-kkz1u5e","Type":"NodeParagraph","Properties":{"id":"20230817161961-kkz1u5e","updated":"20230817161961"},"Children":[{"Type":"NodeText","Data":"先看一下getRecordWriter这个方法的具体实现，在TextOutputFormat中"}]},{"ID":"20230817161962-dznv797","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockInfo":"amF2YQ==","CodeBlockCloseFence":"YGBg","Properties":{"id":"20230817161962-dznv797","updated":"20230817161962"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"amF2YQ==","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"public RecordWriter\u003cK, V\u003e \n       getRecordWriter(TaskAttemptContext job\n                       ) throws IOException, InterruptedException {\n  Configuration conf = job.getConfiguration();\n  //任务的输出数据是否需要压缩，默认为false，也就是不压缩\n  boolean isCompressed = getCompressOutput(job);\n  //获取输出的key(k3)和value(v3)之间的分隔符,默认为\\t\n  String keyValueSeparator= conf.get(SEPARATOR, \"\\t\");\n  CompressionCodec codec = null;\n  String extension = \"\";\n  if (isCompressed) {\n    Class\u003c? extends CompressionCodec\u003e codecClass = \n      getOutputCompressorClass(job, GzipCodec.class);\n    codec = ReflectionUtils.newInstance(codecClass, conf);\n    extension = codec.getDefaultExtension();\n  }\n  //获取输出文件路径信息\n  Path file = getDefaultWorkFile(job, extension);\n  FileSystem fs = file.getFileSystem(conf);\n  //获取文件输出流\n  FSDataOutputStream fileOut = fs.create(file, false);\n  if (isCompressed) {\n    return new LineRecordWriter\u003c\u003e(\n        new DataOutputStream(codec.createOutputStream(fileOut)),\n        keyValueSeparator);\n  } else {\n    //创建行书写器\n    return new LineRecordWriter\u003c\u003e(fileOut, keyValueSeparator);\n  }\n}\n代码块123456789101112131415161718192021222324252627282930\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20230817161963-nx7uo0z","Type":"NodeParagraph","Properties":{"id":"20230817161963-nx7uo0z","updated":"20230817161963"},"Children":[{"Type":"NodeText","Data":"最后会创建一个行书写器，具体看一下代码实现，它里面有一个核心方法write()"}]},{"ID":"20230817161964-amag8q9","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockInfo":"amF2YQ==","CodeBlockCloseFence":"YGBg","Properties":{"id":"20230817161964-amag8q9","updated":"20230817161964"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"amF2YQ==","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"public synchronized void write(K key, V value)\n  throws IOException {\n\n  boolean nullKey = key == null || key instanceof NullWritable;\n  boolean nullValue = value == null || value instanceof NullWritable;\n  //如果key和value都是null 则直接返回\n  if (nullKey \u0026\u0026 nullValue) {\n    return;\n  }\n  //如果key不为null，则写入key\n  if (!nullKey) {\n    writeObject(key);\n  }\n  //key和value都不为null，这里面的条件才会成立，会写入key和value的分隔符\n  //注意：视频中上面这一行的注释添加的有误，以这里为准\n  if (!(nullKey || nullValue)) {\n    out.write(keyValueSeparator);\n  }\n  //如果value不为null，则写入value\n  if (!nullValue) {\n    writeObject(value);\n  }\n  //写入换行符\n  out.write(NEWLINE);\n  }\n\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20230817161965-gnof3t9","Type":"NodeParagraph","Properties":{"id":"20230817161965-gnof3t9","updated":"20230817161965"},"Children":[{"Type":"NodeText","Data":"接着是checkOutputSpecs方法，这个方法的具体实现在FileOutputFormat中"}]},{"ID":"20230817161966-t0363dv","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockInfo":"amF2YQ==","CodeBlockCloseFence":"YGBg","Properties":{"id":"20230817161966-t0363dv","updated":"20230817161966"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"amF2YQ==","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"/*\n检查输出目录是否存在，如果存在，则抛异常\n */\npublic void checkOutputSpecs(JobContext job\n                             ) throws FileAlreadyExistsException, IOException{\n  // Ensure that the output directory is set and not already there\n  //根据输出目录创建path\n  Path outDir = getOutputPath(job);\n  //如果获取不到，则说明任务没有设置输出目录，直接报错即可\n  if (outDir == null) {\n    throw new InvalidJobConfException(\"Output directory not set.\");\n  }\n\n  // get delegation token for outDir's file system\n  TokenCache.obtainTokensForNamenodes(job.getCredentials(),\n      new Path[] { outDir }, job.getConfiguration());\n\n  //判断输出目录是否已存在，如果存在则抛异常\n  if (outDir.getFileSystem(job.getConfiguration()).exists(outDir)) {\n    throw new FileAlreadyExistsException(\"Output directory \" + outDir + \n                                         \" already exists\");\n  }\n}\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20230817161967-x3yiadt","Type":"NodeParagraph","Properties":{"id":"20230817161967-x3yiadt","updated":"20230817161967"},"Children":[{"Type":"NodeText","Data":"最后看一下getOutputCommitter，这个方法的具体实现在FileOutputFormat中"}]},{"ID":"20230817161968-fairpcp","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockInfo":"amF2YQ==","CodeBlockCloseFence":"YGBg","Properties":{"id":"20230817161968-fairpcp","updated":"20230817161968"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"amF2YQ==","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"//获取输出数据提交器，负责将数据写入到输出目录中\npublic synchronized\n    OutputCommitter getOutputCommitter(TaskAttemptContext context)\n    throws IOException {\n  if (committer == null) {\n    Path output = getOutputPath(context);\n    committer = PathOutputCommitterFactory.getCommitterFactory(\n        output,\n        context.getConfiguration()).createOutputCommitter(output, context);\n  }\n  return committer;\n}\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20230817161969-553r06c","Type":"NodeParagraph","Properties":{"id":"20230817161969-553r06c","updated":"20230817161969"}}]}