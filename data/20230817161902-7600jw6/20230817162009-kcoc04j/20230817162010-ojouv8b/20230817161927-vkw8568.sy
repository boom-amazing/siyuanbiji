{"ID":"20230817161927-vkw8568","Spec":"1","Type":"NodeDocument","Properties":{"id":"20230817161927-vkw8568","title":"前置知识","updated":"20230817161927"},"Children":[{"ID":"20230817161928-q8i70t8","Type":"NodeHeading","HeadingLevel":3,"Properties":{"id":"20230817161928-q8i70t8","updated":"20230817161928"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"### ","Properties":{"id":""}},{"Type":"NodeText","Data":"操作系统"}]},{"ID":"20230817161929-qyzgqva","Type":"NodeParagraph","Properties":{"id":"20230817161929-qyzgqva","updated":"20230817161929"},"Children":[{"Type":"NodeText","Data":"前置知识之存储："}]},{"ID":"20230817161930-ds09049","Type":"NodeHeading","HeadingLevel":4,"Properties":{"id":"20230817161930-ds09049","updated":"20230817161930"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"#### ","Properties":{"id":""}},{"Type":"NodeText","Data":"存储器的层次关系："}]},{"ID":"20230817161931-ypilf1g","Type":"NodeParagraph","Properties":{"id":"20230817161931-ypilf1g","updated":"20230817161931"},"Children":[{"Type":"NodeText","Data":"1、cpu的寄存器使用sram芯片，cpucache：一级缓存 二级缓存 三级缓存 寄存器的读写速度最快 通常在1/2个时钟周期 容量大小也最小 然后缓存大概一级二级三级速度大概为2-4 10-20 20-60个时钟周期"}]},{"ID":"20230817161932-a6vaqnt","Type":"NodeParagraph","Properties":{"id":"20230817161932-a6vaqnt","updated":"20230817161932"},"Children":[{"Type":"NodeText","Data":"2、内存：内存使用的是DRAM芯片 即动态随机存取存储器 之所以是动态的 主要是因为存储在电容里的 电容会不断漏电 所以需要定时刷新电容 所以为动态"}]},{"ID":"20230817161933-ef1mi73","Type":"NodeParagraph","Properties":{"id":"20230817161933-ef1mi73","updated":"20230817161933"},"Children":[{"Type":"NodeText","Data":"内存访问通常是200-300个时钟周期"}]},{"ID":"20230817161934-p5sjwop","Type":"NodeParagraph","Properties":{"id":"20230817161934-p5sjwop","updated":"20230817161934"},"Children":[{"Type":"NodeText","Data":"3、ssd/hdd硬盘 ssd为固态硬盘 读写速度大概是内存的10-1000倍"}]},{"ID":"20230817161935-zyvpeul","Type":"NodeParagraph","Properties":{"id":"20230817161935-zyvpeul","updated":"20230817161935"},"Children":[{"Type":"NodeText","Data":"hdd为机械硬盘 大约为内存的10w倍 现在固态硬盘和机械硬盘价格差不多 所以固态硬盘已经逐渐取代了机械硬盘"}]},{"ID":"20230817161936-25a1ouq","Type":"NodeParagraph","Properties":{"id":"20230817161936-25a1ouq","updated":"20230817161936"},"Children":[{"Type":"NodeText","Data":"他们的一个相比于cpu和内存的特点是即使断电 数据也是会保留的 但缺点就是访问速度太慢了"}]},{"ID":"20230817161937-d5fo70g","Type":"NodeParagraph","Properties":{"id":"20230817161937-d5fo70g","updated":"20230817161937"},"Children":[{"Type":"NodeText","Data":"每个存储器只会跟相邻的存储器打交道(比如cpu要从硬盘中读取数据 那么会将数据从硬盘先读入内存中  再将内存数据读入cpu) 并且存储设备为了最求更快的速度 所需材料成本会更高 所以cpu内部的寄存器和缓存只能用更小的容量 而内存硬盘可用更大的容量"}]},{"ID":"20230817161938-piuwk33","Type":"NodeHeading","HeadingLevel":4,"Properties":{"id":"20230817161938-piuwk33","updated":"20230817161938"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"#### ","Properties":{"id":""}},{"Type":"NodeText","Data":"cpu缓存一致性"}]},{"ID":"20230817161939-zhg8py7","Type":"NodeParagraph","Properties":{"id":"20230817161939-zhg8py7","updated":"20230817161939"},"Children":[{"Type":"NodeText","Data":"cpu在读写数据时 都是再cpu cache读写数据的 原因是cache 离cpu很近 读写性能比内存高出很多 对于cache里没有的数据 才会从内存中读取"}]},{"ID":"20230817161940-rnt80md","Type":"NodeParagraph","Properties":{"id":"20230817161940-rnt80md","updated":"20230817161940"},"Children":[{"Type":"NodeText","Data":"而对于数据的写入 cpu都会先写入缓存中 再找个合适的时机写入内存中 所以有两种策略 即写直达 和写回"}]},{"ID":"20230817161941-qo213n4","Type":"NodeParagraph","Properties":{"id":"20230817161941-qo213n4","updated":"20230817161941"},"Children":[{"Type":"NodeText","Data":"来保证cpche与内存的的数据一致性"}]},{"ID":"20230817161942-ippcds9","Type":"NodeList","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20230817161942-ippcds9","updated":"20230817161942"},"Children":[{"ID":"20230817161943-nj6w9tj","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20230817161943-nj6w9tj","updated":"20230817161943"},"Children":[{"ID":"20230817161944-vhe038t","Type":"NodeParagraph","Properties":{"id":"20230817161944-vhe038t","updated":"20230817161944"},"Children":[{"Type":"NodeText","Data":"写直达 只要有数据写入 就会直接把数据写入内存中"}]}]},{"ID":"20230817161945-psvdk43","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20230817161945-psvdk43","updated":"20230817161945"},"Children":[{"ID":"20230817161946-ox1b230","Type":"NodeParagraph","Properties":{"id":"20230817161946-ox1b230","updated":"20230817161946"},"Children":[{"Type":"NodeText","Data":"写回 对于已经在缓存中的数据(指的是写入的内存地址) 只需要更新数据即可 并把其标记为脏数据 不用写入内存中 只有在写入地址发生变化后 才会将原有的cache block里的脏数据更新到内存中 这种方式更容易提高缓存的命中率"}]}]}]},{"ID":"20230817161947-2fc2h5q","Type":"NodeParagraph","Properties":{"id":"20230817161947-2fc2h5q","updated":"20230817161947"},"Children":[{"Type":"NodeText","Data":"因为cpu是多核的 每个核心都有独有的一级和二级缓存 只有三级缓存是多个核心之间共享的 所以要保证多核的一致性 需要确保一下两点"}]},{"ID":"20230817161948-git24n2","Type":"NodeList","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20230817161948-git24n2","updated":"20230817161948"},"Children":[{"ID":"20230817161949-zchiwoc","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20230817161949-zchiwoc","updated":"20230817161949"},"Children":[{"ID":"20230817161950-96w7mbu","Type":"NodeParagraph","Properties":{"id":"20230817161950-96w7mbu","updated":"20230817161950"},"Children":[{"Type":"NodeText","Data":"第一点是写传播 即某个核心发生写入操作时 需要把时间广播到其他核心"}]}]},{"ID":"20230817161951-gcv8orb","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20230817161951-gcv8orb","updated":"20230817161951"},"Children":[{"ID":"20230817161952-pdh3lhg","Type":"NodeParagraph","Properties":{"id":"20230817161952-pdh3lhg","updated":"20230817161952"},"Children":[{"Type":"NodeText","Data":"第二点是事务的串行化 即各个核心的写入顺序再通知到其他核心时 顺序需要一致"}]}]}]},{"ID":"20230817161953-kwpiec1","Type":"NodeParagraph","Properties":{"id":"20230817161953-kwpiec1","updated":"20230817161953"},"Children":[{"Type":"NodeText","Data":"基于总线嗅探的的MESI协议能够保障缓存一致性"}]},{"ID":"20230817161954-4uhg0fi","Type":"NodeList","ListData":{"Tight":true,"BulletChar":45,"Padding":3,"Marker":"LQ==","Num":-1},"Properties":{"id":"20230817161954-4uhg0fi","updated":"20230817161954"},"Children":[{"ID":"20230817161955-xgd7350","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":3,"Marker":"LQ==","Num":-1},"Properties":{"id":"20230817161955-xgd7350","updated":"20230817161955"},"Children":[{"ID":"20230817161956-z4zybp2","Type":"NodeParagraph","Properties":{"id":"20230817161956-z4zybp2","updated":"20230817161956"},"Children":[{"Type":"NodeText","Data":"modified 修改"}]}]},{"ID":"20230817161957-uhbccn8","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20230817161957-uhbccn8","updated":"20230817161957"},"Children":[{"ID":"20230817161958-f37756i","Type":"NodeParagraph","Properties":{"id":"20230817161958-f37756i","updated":"20230817161958"},"Children":[{"Type":"NodeText","Data":"Exclusive 独占"}]}]},{"ID":"20230817161959-9ez7wbs","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20230817161959-9ez7wbs","updated":"20230817161959"},"Children":[{"ID":"20230817161960-a75y4vf","Type":"NodeParagraph","Properties":{"id":"20230817161960-a75y4vf","updated":"20230817161960"},"Children":[{"Type":"NodeText","Data":"shared 共享"}]}]},{"ID":"20230817161961-ukln7fw","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20230817161961-ukln7fw","updated":"20230817161961"},"Children":[{"ID":"20230817161962-2azdiqy","Type":"NodeParagraph","Properties":{"id":"20230817161962-2azdiqy","updated":"20230817161962"},"Children":[{"Type":"NodeText","Data":"invalidated 已失效"}]}]}]},{"ID":"20230817161963-6q0ams4","Type":"NodeParagraph","Properties":{"id":"20230817161963-6q0ams4","updated":"20230817161963"},"Children":[{"Type":"NodeText","Data":"整个msi状态的变更是根据本地cpu核心请求和其他cpu核心请求构成的状态机 对于已经修改或者独占的cache LIne 不需要广播发送给其他cpu核心 来减少总线的压力"}]},{"ID":"20230817161964-dw8a1hb","Type":"NodeParagraph","Properties":{"id":"20230817161964-dw8a1hb","updated":"20230817161964"},"Children":[{"Type":"NodeText","Data":"举一个例子来说明这四个状态的变更："}]},{"ID":"20230817161965-zu4x9hl","Type":"NodeParagraph","Properties":{"id":"20230817161965-zu4x9hl","updated":"20230817161965"},"Children":[{"Type":"NodeText","Data":"1、当A号cpu从内存变量读取i的值 然后缓存到a号cpu的缓存里 此时其他CPU没有缓存该数据 于是标记cache Line 为独占状态(这个时候更新该数据不需要广播给其他cpu)"}]},{"ID":"20230817161966-vaj97pt","Type":"NodeParagraph","Properties":{"id":"20230817161966-vaj97pt","updated":"20230817161966"},"Children":[{"Type":"NodeText","Data":"2、当B号cpu也想从内存中读取i的值时 会发送消息给其他核心 由于a号核心有该值 就会把数据返回给B号cpu 这个时候a号和b号核心都缓存了i值 那么cache line 被标记为 共享状态"}]},{"ID":"20230817161967-dke60bz","Type":"NodeParagraph","Properties":{"id":"20230817161967-dke60bz","updated":"20230817161967"},"Children":[{"Type":"NodeText","Data":"3、当a号核心需要修改i值时 它会首先通知其他cpu核心 并将其他cpu核心的cacheline 标记为已失效 然后再修改自己缓存里的i值(这样就保证了事物的顺序化 即不会多个cpu对同个值进行修改) a核修改完i值后 将该数据段标记为已修改状态"}]},{"ID":"20230817161968-7qlzsaz","Type":"NodeParagraph","Properties":{"id":"20230817161968-7qlzsaz","updated":"20230817161968"},"Children":[{"Type":"NodeText","Data":"4、如果此时a核还想修改i值 就不需要广播给其他核心 极大地减少了总线的压力"}]},{"ID":"20230817161969-sd171rv","Type":"NodeParagraph","Properties":{"id":"20230817161969-sd171rv","updated":"20230817161969"},"Children":[{"Type":"NodeText","Data":"5、当a号核心的cache line要被替换时 发现其有数据标记为modified 于是在其被替换前将其数据同步给内存"}]}]}